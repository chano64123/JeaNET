¸
8F:\UPT\VII CICLO\Z JEANET\Sistema\Negocios\ClsNalerta.cs
	namespace 	
Negocios
 
{ 
public 

class 

ClsNalerta 
{ 
readonly 

ClsDalerta 
datos !
=" #
new$ '

ClsDalerta( 2
(2 3
)3 4
;4 5
public

 
bool

 
agregarAlerta

 !
(

! "

ClsEalerta

" ,
alerta

- 3
)

3 4
{

5 6
	tbAlertas 
tbl 
= 
	tbAlertas %
.% &
crear& +
(+ ,
alerta, 2
.2 3
DniCli3 9
,9 :
alerta; A
.A B
LatitudB I
,I J
alertaK Q
.Q R
LongitudR Z
,Z [
alerta\ b
.b c
Fechac h
,h i
alertaj p
.p q
Horaq u
,u v
alertaw }
.} ~
idTurno	~ Ö
,
Ö Ü
alerta
á ç
.
ç é
estado
é î
)
î ï
;
ï ñ
return 
datos 
. 
agregarAlerta &
(& '
tbl' *
)* +
;+ ,
} 	
public 
	ArrayList 
listarAlertas &
(& '
string' -
dni. 1
)1 2
{3 4
	ArrayList 
cargos 
= 
new "
	ArrayList# ,
(, -
)- .
;. /
foreach 
( 
var 
item 
in  
datos! &
.& '
listarAlertas' 4
(4 5
dni5 8
)8 9
)9 :
{; <

ClsEalerta 
cargo  
=! "

ClsEalerta# -
.- .
crear. 3
(3 4
item4 8
.8 9
DniCli9 ?
,? @
itemA E
.E F
LatitudF M
,M N
itemO S
.S T
LongitudT \
,\ ]
(^ _
DateTime_ g
)g h
itemh l
.l m
Fecham r
,r s
itemt x
.x y
Horay }
,} ~
(	 Ä
int
Ä É
)
É Ñ
item
Ñ à
.
à â
idTurno
â ê
,
ê ë
item
í ñ
.
ñ ó
estado
ó ù
)
ù û
;
û ü
cargos 
. 
Add 
( 
cargo  
)  !
;! "
} 
return 
cargos 
; 
} 	
} 
} ƒ
;F:\UPT\VII CICLO\Z JEANET\Sistema\Negocios\ClsNauditoria.cs
	namespace 	
Negocios
 
{ 
public 

class 
ClsNauditoria 
{  
readonly 
ClsDauditoria 
datos $
=% &
new' *
ClsDauditoria+ 8
(8 9
)9 :
;: ;
public

 
bool

 
agregarAuditoria

 $
(

$ %
ClsEauditoria

% 2
	auditoria

3 <
)

< =
{

> ?
tbAuditoria 
tbl 
= 
tbAuditoria )
.) *
crear* /
(/ 0
	auditoria0 9
.9 :
DNI_Usuario: E
,E F
	auditoriaG P
.P Q
descripcionAccionQ b
,b c
(d e
DateTimee m
)m n
	auditorian w
.w x
fechax }
,} ~
	auditoria	 à
.
à â
hora
â ç
)
ç é
;
é è
return 
datos 
. 
agregarAuditoria )
() *
tbl* -
)- .
;. /
} 	
public 
	ArrayList 
listarAuditoria (
(( )
)) *
{+ ,
	ArrayList 
cargos 
= 
new "
	ArrayList# ,
(, -
)- .
;. /
foreach 
( 
var 
item 
in  
datos! &
.& '
listarAuditoria' 6
(6 7
)7 8
)8 9
{: ;
ClsEauditoria 
	auditoria '
=( )
ClsEauditoria* 7
.7 8
crear8 =
(= >
item> B
.B C
DNI_UsuarioC N
,N O
itemP T
.T U
descripcionAccionU f
,f g
(h i
DateTimei q
)q r
itemr v
.v w
fechaw |
,| }
item	~ Ç
.
Ç É
hora
É á
)
á à
;
à â
cargos 
. 
Add 
( 
	auditoria $
)$ %
;% &
} 
return 
cargos 
; 
} 	
public 
	ArrayList 
filtrarAuditoria )
() *
string* 0
filtro1 7
)7 8
{9 :
	ArrayList 
cargos 
= 
new "
	ArrayList# ,
(, -
)- .
;. /
foreach 
( 
var 
item 
in  
datos! &
.& '
filtrarAuditoria' 7
(7 8
filtro8 >
)> ?
)? @
{A B
ClsEauditoria 
	auditoria '
=( )
ClsEauditoria* 7
.7 8
crear8 =
(= >
item> B
.B C
DNI_UsuarioC N
,N O
itemP T
.T U
descripcionAccionU f
,f g
(h i
DateTimei q
)q r
itemr v
.v w
fechaw |
,| }
item	~ Ç
.
Ç É
hora
É á
)
á à
;
à â
cargos 
. 
Add 
( 
	auditoria $
)$ %
;% &
} 
return 
cargos 
; 
} 	
}   
}!! •
?F:\UPT\VII CICLO\Z JEANET\Sistema\Negocios\ClsNautocompletar.cs
	namespace 	
Negocios
 
{ 
public 

class 
ClsNautocompletar "
{# $
public (
AutoCompleteStringCollection +
MtdCargarClientes, =
(= >
)> ?
{@ A
ClsNcliente 
N 
= 
new 
ClsNcliente  +
(+ ,
), -
;- .(
AutoCompleteStringCollection (
datoauto) 1
=2 3
new4 7(
AutoCompleteStringCollection8 T
(T U
)U V
;V W
foreach		 
(		 
ClsEcliente		  
item		! %
in		& (
N		) *
.		* +
listarClientes		+ 9
(		9 :
)		: ;
)		; <
{		= >
datoauto

 
.

 
Add

 
(

 
item

 !
.

! "
Nombres

" )
+

* +
$str

, /
+

0 1
item

2 6
.

6 7
	Apellidos

7 @
)

@ A
;

A B
datoauto 
. 
Add 
( 
item !
.! "

DniCliente" ,
), -
;- .
} 
return 
datoauto 
; 
} 	
public (
AutoCompleteStringCollection +
MtdCargarProductos, >
(> ?
)? @
{A B
ClsNlote 
N 
= 
new 
ClsNlote %
(% &
)& '
;' ((
AutoCompleteStringCollection (
datoauto) 1
=2 3
new4 7(
AutoCompleteStringCollection8 T
(T U
)U V
;V W
foreach 
( 
ClsElote 
item "
in# %
N& '
.' (
listarLotes( 3
(3 4
)4 5
)5 6
{7 8
datoauto 
. 
Add 
( 
item !
.! "
CodLote" )
)) *
;* +
datoauto 
. 
Add 
( 
item !
.! "
Nombre" (
)( )
;) *
} 
return 
datoauto 
; 
} 	
} 
} ≥&
:F:\UPT\VII CICLO\Z JEANET\Sistema\Negocios\ClsNbusqueda.cs
	namespace 	
Negocios
 
{ 
public 

class 
ClsNbusqueda 
{ 
public 
	ArrayList 
MtdBuscarReniec (
(( )
string) /
dni0 3
)3 4
{5 6
	ArrayList 
temp 
= 
new  
	ArrayList! *
(* +
)+ ,
;, -
var		 
client		 
=		 
new		 

RestClient		 '
(		' (

Properties		( 2
.		2 3
	Resources		3 <
.		< =

linkReniec		= G
+		H I
dni		J M
+		N O
$str		P Y
+		Y Z

Properties		Z d
.		d e
	Resources		e n
.		n o
reniecApiToken		o }
)		} ~
;		~ 
var

 
request

 
=

 
new

 
RestRequest

 )
(

) *
Method

* 0
.

0 1
GET

1 4
)

4 5
;

5 6
IRestResponse 
< 
ClsEpersona %
>% &
response' /
=0 1
client2 8
.8 9
Execute9 @
<@ A
ClsEpersonaA L
>L M
(M N
requestN U
)U V
;V W
if 
( 
response 
. 
Data 
. 
Nombres %
is& (
not) ,
null- 1
)1 2
{3 4
temp 
. 
Add 
( 
response !
.! "
Data" &
.& '
Dni' *
)* +
;+ ,
temp 
. 
Add 
( 
response !
.! "
Data" &
.& '
Nombres' .
). /
;/ 0
temp 
. 
Add 
( 
response !
.! "
Data" &
.& '
ApellidoPaterno' 6
)6 7
;7 8
temp 
. 
Add 
( 
response !
.! "
Data" &
.& '
ApellidoMaterno' 6
)6 7
;7 8
temp 
. 
Add 
( 
response !
.! "
Data" &
.& '
CodVerifica' 2
)2 3
;3 4
} 
return 
temp 
; 
} 	
public 
	ArrayList 
MtdBuscarSunat '
(' (
string( .
ruc/ 2
)2 3
{4 5
	ArrayList 
temp 
= 
new  
	ArrayList! *
(* +
)+ ,
;, -
var 
client 
= 
new 

RestClient '
(' (

Properties( 2
.2 3
	Resources3 <
.< =

linkReniec= G
+H I
rucJ M
+N O
$strP Y
+Z [

Properties\ f
.f g
	Resourcesg p
.p q
reniecApiTokenq 
)	 Ä
;
Ä Å
var 
request 
= 
new 
RestRequest )
() *
Method* 0
.0 1
GET1 4
)4 5
;5 6
IRestResponse 
< 
ClsEempresa %
>% &
response' /
=0 1
client2 8
.8 9
Execute9 @
<@ A
ClsEempresaA L
>L M
(M N
requestN U
)U V
;V W
if 
( 
response 
. 
Data 
. 
RazonSocial )
is* ,
not- 0
null1 5
)5 6
{7 8
temp 
. 
Add 
( 
response !
.! "
Data" &
.& '
RazonSocial' 2
)2 3
;3 4
temp 
. 
Add 
( 
response !
.! "
Data" &
.& '
	Direccion' 0
)0 1
;1 2
temp 
. 
Add 
( 
response !
.! "
Data" &
.& '
	Telefonos' 0
)0 1
;1 2
temp 
. 
Add 
( 
response !
.! "
Data" &
.& '
Estado' -
)- .
;. /
}   
return!! 
temp!! 
;!! 
}"" 	
}## 
}$$ ≤.
7F:\UPT\VII CICLO\Z JEANET\Sistema\Negocios\ClsNcargo.cs
	namespace 	
Negocios
 
{ 
public 

class 
	ClsNcargo 
{ 
readonly 
	ClsDcargo 
datos  
=! "
new# &
	ClsDcargo' 0
(0 1
)1 2
;2 3
public

 
string

 !
MtdObtenerCodigoCargo

 +
(

+ ,
)

, -
{

. /
string 
numero 
= 
$str 
;  
int 
cant 
= 
listarCargos #
(# $
)$ %
.% &
Count& +
++ ,
$num, -
;- .
if 
( 
cant 
< 
$num 
) 
{ 
numero 
= 
$str 
+ 
cant  $
.$ %
ToString% -
(- .
). /
;/ 0
} 
else 
if 
( 
cant 
< 
$num !
)! "
{# $
numero 
= 
$str 
+ 
cant #
.# $
ToString$ ,
(, -
)- .
;. /
} 
else 
if 
( 
cant 
< 
$num "
)" #
{$ %
numero 
= 
cant 
. 
ToString &
(& '
)' (
;( )
} 
return 
numero 
; 
} 	
public 
bool 
agregarCargo  
(  !
	ClsEcargo! *
cargo+ 0
)0 1
{2 3
tbCargos 
tbl 
= 
tbCargos #
.# $
crear$ )
() *
cargo* /
./ 0
Codigo_Cargo0 <
,< =
cargo= B
.B C
DescripcionC N
)N O
;O P
return 
datos 
. 
agregarCargo %
(% &
tbl& )
)) *
;* +
} 	
public 
	ArrayList 
listarCargos %
(% &
)& '
{( )
	ArrayList 
cargos 
= 
new "
	ArrayList# ,
(, -
)- .
;. /
foreach 
( 
var 
item 
in  
datos! &
.& '
listarCargos' 3
(3 4
)4 5
)5 6
{7 8
	ClsEcargo 
cargo 
=  !
	ClsEcargo" +
.+ ,
crear, 1
(1 2
item2 6
.6 7
Codigo_Cargo7 C
,C D
itemE I
.I J
DescripcionJ U
)U V
;V W
cargos   
.   
Add   
(   
cargo    
)    !
;  ! "
}!! 
return"" 
cargos"" 
;"" 
}## 	
public%% 
	ArrayList%% 
busquedaCargo%% &
(%%& '
string%%' -
codigoCargo%%. 9
)%%9 :
{%%; <
	ArrayList&& 
cargos&& 
=&& 
new&& "
	ArrayList&&# ,
(&&, -
)&&- .
;&&. /
foreach'' 
('' 
var'' 
item'' 
in''  
datos''! &
.''& '
busquedaCargo''' 4
(''4 5
codigoCargo''5 @
)''@ A
)''A B
{''C D
	ClsEcargo(( 
cargo(( 
=((  !
	ClsEcargo((" +
.((+ ,
crear((, 1
(((1 2
item((2 6
.((6 7
Codigo_Cargo((7 C
,((C D
item((E I
.((I J
Descripcion((J U
)((U V
;((V W
cargos)) 
.)) 
Add)) 
()) 
cargo))  
)))  !
;))! "
}** 
return++ 
cargos++ 
;++ 
},, 	
public.. 
	ArrayList.. 
filtrarCargos.. &
(..& '
string..' -
filtro... 4
)..4 5
{..6 7
	ArrayList// 
cargos// 
=// 
new// "
	ArrayList//# ,
(//, -
)//- .
;//. /
foreach00 
(00 
var00 
item00 
in00  
datos00! &
.00& '
filtrarCargos00' 4
(004 5
filtro005 ;
)00; <
)00< =
{00> ?
	ClsEcargo11 
cargo11 
=11  !
	ClsEcargo11" +
.11+ ,
crear11, 1
(111 2
item112 6
.116 7
Codigo_Cargo117 C
,11C D
item11E I
.11I J
Descripcion11J U
)11U V
;11V W
cargos22 
.22 
Add22 
(22 
cargo22  
)22  !
;22! "
}33 
return44 
cargos44 
;44 
}55 	
public77 
bool77 
modificarCargo77 "
(77" #
	ClsEcargo77# ,
cargo77- 2
)772 3
{774 5
tbCargos88 
tbl88 
=88 
tbCargos88 #
.88# $
crear88$ )
(88) *
cargo88* /
.88/ 0
Codigo_Cargo880 <
,88< =
cargo88> C
.88C D
Descripcion88D O
)88O P
;88P Q
return99 
datos99 
.99 
modificarCargo99 '
(99' (
tbl99( +
)99+ ,
;99, -
}:: 	
};; 
}<< €.
9F:\UPT\VII CICLO\Z JEANET\Sistema\Negocios\ClsNcliente.cs
	namespace 	
Negocios
 
{ 
public 

class 
ClsNcliente 
{ 
readonly 
ClsDcliente 
datos "
=# $
new% (
ClsDcliente) 4
(4 5
)5 6
;6 7
public		 
bool		 
agregarCliente		 "
(		" #
ClsEcliente		# .
cliente		/ 6
)		6 7
{		8 9

tbClientes

 
tbl

 
=

 

tbClientes

 '
.

' (
crear

( -
(

- .
cliente

. 5
.

5 6

DniCliente

6 @
,

@ A
cliente

B I
.

I J
Nombres

J Q
,

Q R
cliente

S Z
.

Z [
	Apellidos

[ d
,

d e
cliente

f m
.

m n
Correo

n t
,

t u
cliente

v }
.

} ~
Telefono	

~ Ü
,


Ü á
cliente


à è
.


è ê
Estado


ê ñ
)


ñ ó
;


ó ò
return 
datos 
. 
agregarCliente '
(' (
tbl( +
)+ ,
;, -
} 	
public 
bool 
modificarCliente $
($ %
ClsEcliente% 0
cliente1 8
)8 9
{: ;

tbClientes 
tbl 
= 

tbClientes '
.' (
crear( -
(- .
cliente. 5
.5 6

DniCliente6 @
,@ A
clienteB I
.I J
NombresJ Q
,Q R
clienteS Z
.Z [
	Apellidos[ d
,d e
clientef m
.m n
Correon t
,t u
clientev }
.} ~
Telefono	~ Ü
,
Ü á
cliente
à è
.
è ê
Estado
ê ñ
)
ñ ó
;
ó ò
return 
datos 
. 
modificarCliente )
() *
tbl* -
)- .
;. /
} 	
public 
	ArrayList 
listarClientes '
(' (
)( )
{* +
	ArrayList 
clientes 
=  
new! $
	ArrayList% .
(. /
)/ 0
;0 1
foreach 
( 
var 
item 
in  
datos! &
.& '
listarCliente' 4
(4 5
)5 6
)6 7
{8 9
ClsEcliente 
cliente #
=$ %
ClsEcliente& 1
.1 2
crear2 7
(7 8
item8 <
.< =

DniCliente= G
,G H
itemI M
.M N
NombresN U
,U V
itemW [
.[ \
	Apellidos\ e
,e f
itemg k
.k l
Correol r
,r s
itemt x
.x y
Telefono	y Å
,
Å Ç
item
É á
.
á à
Estado
à é
)
é è
;
è ê
clientes 
. 
Add 
( 
cliente $
)$ %
;% &
} 
return 
clientes 
; 
} 	
public 
	ArrayList 
filtrarClientes (
(( )
string) /
filtro0 6
)6 7
{8 9
	ArrayList 
clientes 
=  
new! $
	ArrayList% .
(. /
)/ 0
;0 1
foreach 
( 
var 
item 
in  
datos! &
.& '
filtrarCliente' 5
(5 6
filtro6 <
)< =
)= >
{? @
ClsEcliente 
cliente #
=$ %
ClsEcliente& 1
.1 2
crearFiltro2 =
(= >
item> B
.B C

DniClienteC M
,M N
itemO S
.S T
NombresT [
,[ \
item] a
.a b
	Apellidosb k
,k l
itemm q
.q r
Estador x
)x y
;y z
clientes   
.   
Add   
(   
cliente   $
)  $ %
;  % &
}!! 
return"" 
clientes"" 
;"" 
}## 	
public%% 
	ArrayList%% 
busquedaCliente%% (
(%%( )
string%%) /
codigoCliente%%0 =
)%%= >
{%%? @
	ArrayList&& 
clientes&& 
=&&  
new&&! $
	ArrayList&&% .
(&&. /
)&&/ 0
;&&0 1
foreach'' 
('' 
var'' 
item'' 
in''  
datos''! &
.''& '
busquedaCliente''' 6
(''6 7
codigoCliente''7 D
)''D E
)''E F
{''G H
ClsEcliente(( 
cliente(( #
=(($ %
ClsEcliente((& 1
.((1 2
crear((2 7
(((7 8
item((8 <
.((< =

DniCliente((= G
,((G H
item((I M
.((M N
Nombres((N U
,((U V
item((W [
.(([ \
	Apellidos((\ e
,((e f
item((g k
.((k l
Correo((l r
,((r s
item((t x
.((x y
Telefono	((y Å
,
((Å Ç
item
((É á
.
((á à
Estado
((à é
)
((é è
;
((è ê
clientes)) 
.)) 
Add)) 
()) 
cliente)) $
)))$ %
;))% &
}** 
return++ 
clientes++ 
;++ 
},, 	
}-- 
}.. ô
DF:\UPT\VII CICLO\Z JEANET\Sistema\Negocios\ClsNclientedispositivo.cs
	namespace 	
Negocios
 
{ 
public 

class "
ClsNclientedispositivo '
{( )
readonly "
ClsDclienteDispositivo '
datos( -
=. /
new0 3"
ClsDclienteDispositivo4 J
(J K
)K L
;L M
public		 
bool		 %
agregarClienteDispositivo		 -
(		- .
string		. 4
dni		5 8
,		8 9"
ClsEdetallecomprobante		: P
detalleComprobante		Q c
,		c d
	DataTable		e n
disponibles		o z
)		z {
{		| }
bool

 
result

 
=

 
true

 
;

 
for 
( 
int 
i 
= 
$num 
; 
i 
< 
detalleComprobante  2
.2 3
Cantidad3 ;
;; <
i= >
++> @
)@ A
{B C"
ClsEclientedispositivo &
clienteDispositivo' 9
=: ;"
ClsEclientedispositivo< R
.R S
crearS X
(X Y
dniY \
,\ ]
disponibles^ i
.i j
Rowsj n
[n o
io p
]p q
[q r
$numr s
]s t
.t u
ToStringu }
(} ~
)~ 
)	 Ä
;
Ä Å
tbClienteDisposiivo #
tbl$ '
=( )
tbClienteDisposiivo* =
.= >
crear> C
(C D
clienteDispositivoD V
.V W

DniClienteW a
,a b
clienteDispositivoc u
.u v
SerieDispositivo	v Ü
)
Ü á
;
á à
result 
= 
datos 
. %
agregarClienteDispositivo 8
(8 9
tbl9 <
)< =
&&> @
resultB H
;H I
} 
return 
result 
; 
} 	
} 
} ü÷
=F:\UPT\VII CICLO\Z JEANET\Sistema\Negocios\ClsNcomprobante.cs
	namespace 	
Negocios
 
{ 
public 

class 
ClsNcomprobante  
{! "
public 
string 
MtdConvertirALetras )
() *
string* 0
monto1 6
)6 7
{8 9
string		 
res		 
,		 
dec		 
=		 
$str		  
;		  !
Int64

 
entero

 
;

 
int 
	decimales 
; 
double 
nro 
; 
try 
{ 
nro 
= 
Convert 
. 
ToDouble &
(& '
monto' ,
), -
;- .
} 
catch 
{ 
return 
$str 
; 
} 
entero 
= 
Convert 
. 
ToInt64 $
($ %
Math% )
.) *
Truncate* 2
(2 3
nro3 6
)6 7
)7 8
;8 9
	decimales 
= 
Convert 
.  
ToInt32  '
(' (
Math( ,
., -
Round- 2
(2 3
(3 4
nro4 7
-8 9
entero: @
)@ A
*B C
$numD G
,G H
$numI J
)J K
)K L
;L M
if 
( 
	decimales 
> 
$num 
) 
{  
dec 
= 
$str 
+ 
	decimales  )
.) *
ToString* 2
(2 3
)3 4
+5 6
$str7 G
;G H
} 
res 
= 
toText 
( 
Convert  
.  !
ToDouble! )
() *
entero* 0
)0 1
)1 2
+3 4
$str5 >
+? @
decA D
;D E
return 
res 
; 
} 	
public   
string   
MtdCalcularSerie   &
(  & '
int  ' *
cantidad  + 3
)  3 4
{  5 6
int!! 
i!! 
=!! 
$num!! 
;!! 
do"" 
{"" 
i## 
++## 
;## 
cantidad$$ 
-=$$ 
$num$$ "
;$$" #
}%% 
while%% 
(%% 
cantidad%% 
>%% 
$num%%  !
)%%! "
;%%" #
if&& 
(&& 
i&& 
.&& 
ToString&& 
(&& 
)&& 
.&& 
Length&& #
==&&$ &
$num&&' (
)&&( )
{&&* +
return'' 
$str'' 
+'' 
i'' 
.''  
ToString''  (
(''( )
)'') *
;''* +
}(( 
else(( 
if(( 
((( 
i(( 
.(( 
ToString(( !
(((! "
)((" #
.((# $
Length(($ *
==((+ -
$num((. /
)((/ 0
{((1 2
return)) 
$str)) 
+)) 
i)) 
.)) 
ToString)) '
())' (
)))( )
;))) *
}** 
else** 
{** 
return++ 
i++ 
.++ 
ToString++ !
(++! "
)++" #
;++# $
},, 
}-- 	
readonly// 
ClsDcomprobante//  
datos//! &
=//' (
new//) ,
ClsDcomprobante//- <
(//< =
)//= >
;//> ?
public00 
object00 %
listarDetallesComprobante00 /
(00/ 0"
ClsEdetallecomprobante000 F
detalleComprobante00G Y
)00Y Z
{00[ \
	ArrayList22 
detalleComprobantes22 )
=22* +
new22, /
	ArrayList220 9
(229 :
)22: ;
;22; <
foreach33 
(33 
var33 
item33 
in33  
datos33! &
.33& '%
listarDetalleComprobantes33' @
(33@ A
detalleComprobante33A S
.33S T
Serie33T Y
,33Y Z
detalleComprobante33[ m
.33m n
Numero33n t
)33t u
)33u v
{33w x"
ClsEdetallecomprobante44 &
_DetalleComprobante44' :
=44; <"
ClsEdetallecomprobante44= S
.44S T
crear44T Y
(44Y Z
item44Z ^
.44^ _
Serie44_ d
,44d e
item44f j
.44j k
Numero44k q
,44q r
item44s w
.44w x

CodigoLote	44x Ç
,
44Ç É
item
44Ñ à
.
44à â
Descripcion
44â î
,
44î ï
item
44ñ ö
.
44ö õ
Cantidad
44õ £
,
44£ §
item
44• ©
.
44© ™
Precio
44™ ∞
,
44∞ ±
item
44≤ ∂
.
44∂ ∑
Importe
44∑ æ
)
44æ ø
;
44ø ¿
detalleComprobantes55 #
.55# $
Add55$ '
(55' (
_DetalleComprobante55( ;
)55; <
;55< =
}66 
return77 
detalleComprobantes77 &
;77& '
}88 	
public:: 
object:: 
filtrarComprobantes:: )
(::) *
string::* 0
filtro::1 7
)::7 8
{::9 :
	ArrayList;; 
comprobantes;; "
=;;# $
new;;% (
	ArrayList;;) 2
(;;2 3
);;3 4
;;;4 5
foreach<< 
(<< 
var<< 
item<< 
in<<  
datos<<! &
.<<& '
filtrarComprobantes<<' :
(<<: ;
filtro<<; A
)<<A B
)<<B C
{<<D E
ClsEcomprobante== 
comprobante==  +
===, -
ClsEcomprobante==. =
.=== >
crear==> C
(==C D
item==D H
.==H I
Serie==I N
,==N O
item==P T
.==T U
Numero==U [
,==[ \
item==] a
.==a b
DniEmpleado==b m
,==m n
item==o s
.==s t
Fecha==t y
,==y z
item=={ 
.	== Ä

DniCliente
==Ä ä
,
==ä ã
item
==å ê
.
==ê ë
Subtotal
==ë ô
,
==ô ö
item
==õ ü
.
==ü †
Igv
==† £
,
==£ §
item
==• ©
.
==© ™
Total
==™ Ø
,
==Ø ∞
item
==± µ
.
==µ ∂
Estado
==∂ º
)
==º Ω
;
==Ω æ
comprobantes>> 
.>> 
Add>>  
(>>  !
comprobante>>! ,
)>>, -
;>>- .
}?? 
return@@ 
comprobantes@@ 
;@@  
}AA 	
publicCC 
stringCC 
MtdCalcularNumeroCC '
(CC' (
intCC( +
cantidadCC, 4
)CC4 5
{CC6 7
cantidadDD 
++DD 
;DD 
ifEE 
(EE 
cantidadEE 
.EE 
ToStringEE !
(EE! "
)EE" #
.EE# $
LengthEE$ *
==EE+ -
$numEE. /
)EE/ 0
{EE1 2
returnFF 
$strFF 
+FF  
cantidadFF! )
.FF) *
ToStringFF* 2
(FF2 3
)FF3 4
;FF4 5
}GG 
elseGG 
ifGG 
(GG 
cantidadGG 
.GG  
ToStringGG  (
(GG( )
)GG) *
.GG* +
LengthGG+ 1
==GG2 4
$numGG5 6
)GG6 7
{GG8 9
returnHH 
$strHH 
+HH 
cantidadHH  (
.HH( )
ToStringHH) 1
(HH1 2
)HH2 3
;HH3 4
}II 
elseII 
ifII 
(II 
cantidadII 
.II  
ToStringII  (
(II( )
)II) *
.II* +
LengthII+ 1
==II2 4
$numII5 6
)II6 7
{II8 9
returnJJ 
$strJJ 
+JJ 
cantidadJJ '
.JJ' (
ToStringJJ( 0
(JJ0 1
)JJ1 2
;JJ2 3
}KK 
elseKK 
ifKK 
(KK 
cantidadKK 
.KK  
ToStringKK  (
(KK( )
)KK) *
.KK* +
LengthKK+ 1
==KK2 4
$numKK5 6
)KK6 7
{KK8 9
returnLL 
$strLL 
+LL 
cantidadLL &
.LL& '
ToStringLL' /
(LL/ 0
)LL0 1
;LL1 2
}MM 
elseMM 
ifMM 
(MM 
cantidadMM 
.MM  
ToStringMM  (
(MM( )
)MM) *
.MM* +
LengthMM+ 1
==MM2 4
$numMM5 6
)MM6 7
{MM8 9
returnNN 
$strNN 
+NN 
cantidadNN %
.NN% &
ToStringNN& .
(NN. /
)NN/ 0
;NN0 1
}OO 
elseOO 
{OO 
returnPP 
cantidadPP 
.PP  
ToStringPP  (
(PP( )
)PP) *
;PP* +
}QQ 
}RR 	
publicTT 
	ArrayListTT 
listarComprobantesTT +
(TT+ ,
)TT, -
{TT. /
	ArrayListVV 
comprobantesVV "
=VV# $
newVV% (
	ArrayListVV) 2
(VV2 3
)VV3 4
;VV4 5
foreachWW 
(WW 
varWW 
itemWW 
inWW  
datosWW! &
.WW& '
listarComprobantesWW' 9
(WW9 :
)WW: ;
)WW; <
{WW= >
ClsEcomprobanteXX 
comprobanteXX  +
=XX, -
ClsEcomprobanteXX. =
.XX= >
crearXX> C
(XXC D
itemXXD H
.XXH I
SerieXXI N
,XXN O
itemXXP T
.XXT U
NumeroXXU [
,XX[ \
itemXX] a
.XXa b
DniEmpleadoXXb m
,XXm n
itemXXo s
.XXs t
FechaXXt y
,XXy z
itemXX{ 
.	XX Ä

DniCliente
XXÄ ä
,
XXä ã
item
XXå ê
.
XXê ë
Subtotal
XXë ô
,
XXô ö
item
XXõ ü
.
XXü †
Igv
XX† £
,
XX£ §
item
XX• ©
.
XX© ™
Total
XX™ Ø
,
XXØ ∞
item
XX± µ
.
XXµ ∂
Estado
XX∂ º
)
XXº Ω
;
XXΩ æ
comprobantesYY 
.YY 
AddYY  
(YY  !
comprobanteYY! ,
)YY, -
;YY- .
}ZZ 
return[[ 
comprobantes[[ 
;[[  
}\\ 	
private^^ 
string^^ 
toText^^ 
(^^ 
double^^ $
value^^% *
)^^* +
{^^, -
string__ 
Num2Text__ 
=__ 
$str__  
;__  !
value`` 
=`` 
Math`` 
.`` 
Truncate`` !
(``! "
value``" '
)``' (
;``( )
ifaa 
(aa 
valueaa 
==aa 
$numaa 
)aa 
Num2Textaa $
=aa% &
$straa' -
;aa- .
elsebb 
ifbb 
(bb 
valuebb 
==bb 
$numbb 
)bb  
Num2Textbb! )
=bb* +
$strbb, 1
;bb1 2
elsecc 
ifcc 
(cc 
valuecc 
==cc 
$numcc 
)cc  
Num2Textcc! )
=cc* +
$strcc, 1
;cc1 2
elsedd 
ifdd 
(dd 
valuedd 
==dd 
$numdd 
)dd  
Num2Textdd! )
=dd* +
$strdd, 2
;dd2 3
elseee 
ifee 
(ee 
valueee 
==ee 
$numee 
)ee  
Num2Textee! )
=ee* +
$stree, 4
;ee4 5
elseff 
ifff 
(ff 
valueff 
==ff 
$numff 
)ff  
Num2Textff! )
=ff* +
$strff, 3
;ff3 4
elsegg 
ifgg 
(gg 
valuegg 
==gg 
$numgg 
)gg  
Num2Textgg! )
=gg* +
$strgg, 2
;gg2 3
elsehh 
ifhh 
(hh 
valuehh 
==hh 
$numhh 
)hh  
Num2Texthh! )
=hh* +
$strhh, 3
;hh3 4
elseii 
ifii 
(ii 
valueii 
==ii 
$numii 
)ii  
Num2Textii! )
=ii* +
$strii, 2
;ii2 3
elsejj 
ifjj 
(jj 
valuejj 
==jj 
$numjj 
)jj  
Num2Textjj! )
=jj* +
$strjj, 3
;jj3 4
elsekk 
ifkk 
(kk 
valuekk 
==kk 
$numkk  
)kk  !
Num2Textkk" *
=kk+ ,
$strkk- 3
;kk3 4
elsell 
ifll 
(ll 
valuell 
==ll 
$numll  
)ll  !
Num2Textll" *
=ll+ ,
$strll- 3
;ll3 4
elsemm 
ifmm 
(mm 
valuemm 
==mm 
$nummm  
)mm  !
Num2Textmm" *
=mm+ ,
$strmm- 3
;mm3 4
elsenn 
ifnn 
(nn 
valuenn 
==nn 
$numnn  
)nn  !
Num2Textnn" *
=nn+ ,
$strnn- 4
;nn4 5
elseoo 
ifoo 
(oo 
valueoo 
==oo 
$numoo  
)oo  !
Num2Textoo" *
=oo+ ,
$stroo- 6
;oo6 7
elsepp 
ifpp 
(pp 
valuepp 
==pp 
$numpp  
)pp  !
Num2Textpp" *
=pp+ ,
$strpp- 5
;pp5 6
elseqq 
ifqq 
(qq 
valueqq 
<qq 
$numqq 
)qq  
Num2Textqq! )
=qq* +
$strqq, 3
+qq4 5
toTextqq6 <
(qq< =
valueqq= B
-qqC D
$numqqE G
)qqG H
;qqH I
elserr 
ifrr 
(rr 
valuerr 
==rr 
$numrr  
)rr  !
Num2Textrr" *
=rr+ ,
$strrr- 5
;rr5 6
elsess 
ifss 
(ss 
valuess 
<ss 
$numss 
)ss  
Num2Textss! )
=ss* +
$strss, 4
+ss5 6
toTextss7 =
(ss= >
valuess> C
-ssD E
$numssF H
)ssH I
;ssI J
elsett 
iftt 
(tt 
valuett 
==tt 
$numtt  
)tt  !
Num2Texttt" *
=tt+ ,
$strtt- 6
;tt6 7
elseuu 
ifuu 
(uu 
valueuu 
==uu 
$numuu  
)uu  !
Num2Textuu" *
=uu+ ,
$struu- 7
;uu7 8
elsevv 
ifvv 
(vv 
valuevv 
==vv 
$numvv  
)vv  !
Num2Textvv" *
=vv+ ,
$strvv- 8
;vv8 9
elseww 
ifww 
(ww 
valueww 
==ww 
$numww  
)ww  !
Num2Textww" *
=ww+ ,
$strww- 6
;ww6 7
elsexx 
ifxx 
(xx 
valuexx 
==xx 
$numxx  
)xx  !
Num2Textxx" *
=xx+ ,
$strxx- 6
;xx6 7
elseyy 
ifyy 
(yy 
valueyy 
==yy 
$numyy  
)yy  !
Num2Textyy" *
=yy+ ,
$stryy- 6
;yy6 7
elsezz 
ifzz 
(zz 
valuezz 
==zz 
$numzz  
)zz  !
Num2Textzz" *
=zz+ ,
$strzz- 6
;zz6 7
else{{ 
if{{ 
({{ 
value{{ 
<{{ 
$num{{  
){{  !
Num2Text{{" *
={{+ ,
toText{{- 3
({{3 4
Math{{4 8
.{{8 9
Truncate{{9 A
({{A B
value{{B G
/{{H I
$num{{J L
){{L M
*{{N O
$num{{P R
){{R S
+{{T U
$str{{V [
+{{\ ]
toText{{^ d
({{d e
value{{e j
%{{k l
$num{{m o
){{o p
;{{p q
else|| 
if|| 
(|| 
value|| 
==|| 
$num|| !
)||! "
Num2Text||# +
=||, -
$str||. 4
;||4 5
else}} 
if}} 
(}} 
value}} 
<}} 
$num}}  
)}}  !
Num2Text}}" *
=}}+ ,
$str}}- 6
+}}7 8
toText}}9 ?
(}}? @
value}}@ E
-}}F G
$num}}H K
)}}K L
;}}L M
else~~ 
if~~ 
(~~ 
(~~ 
value~~ 
==~~ 
$num~~ "
)~~" #
||~~$ &
(~~' (
value~~( -
==~~. 0
$num~~1 4
)~~4 5
||~~6 8
(~~9 :
value~~: ?
==~~@ B
$num~~C F
)~~F G
||~~H J
(~~K L
value~~L Q
==~~R T
$num~~U X
)~~X Y
||~~Z \
(~~] ^
value~~^ c
==~~d f
$num~~g j
)~~j k
)~~k l
Num2Text~~m u
=~~v w
toText~~x ~
(~~~ 
Math	~~ É
.
~~É Ñ
Truncate
~~Ñ å
(
~~å ç
value
~~ç í
/
~~ì î
$num
~~ï ò
)
~~ò ô
)
~~ô ö
+
~~õ ú
$str
~~ù ¶
;
~~¶ ß
else 
if 
( 
value 
== 
$num !
)! "
Num2Text# +
=, -
$str. :
;: ;
else
ÄÄ 
if
ÄÄ 
(
ÄÄ 
value
ÄÄ 
==
ÄÄ 
$num
ÄÄ !
)
ÄÄ! "
Num2Text
ÄÄ# +
=
ÄÄ, -
$str
ÄÄ. ;
;
ÄÄ; <
else
ÅÅ 
if
ÅÅ 
(
ÅÅ 
value
ÅÅ 
==
ÅÅ 
$num
ÅÅ !
)
ÅÅ! "
Num2Text
ÅÅ# +
=
ÅÅ, -
$str
ÅÅ. ;
;
ÅÅ; <
else
ÇÇ 
if
ÇÇ 
(
ÇÇ 
value
ÇÇ 
<
ÇÇ 
$num
ÇÇ !
)
ÇÇ! "
Num2Text
ÇÇ# +
=
ÇÇ, -
toText
ÇÇ. 4
(
ÇÇ4 5
Math
ÇÇ5 9
.
ÇÇ9 :
Truncate
ÇÇ: B
(
ÇÇB C
value
ÇÇC H
/
ÇÇI J
$num
ÇÇK N
)
ÇÇN O
*
ÇÇP Q
$num
ÇÇR U
)
ÇÇU V
+
ÇÇW X
$str
ÇÇY \
+
ÇÇ] ^
toText
ÇÇ_ e
(
ÇÇe f
value
ÇÇf k
%
ÇÇl m
$num
ÇÇn q
)
ÇÇq r
;
ÇÇr s
else
ÉÉ 
if
ÉÉ 
(
ÉÉ 
value
ÉÉ 
==
ÉÉ 
$num
ÉÉ "
)
ÉÉ" #
Num2Text
ÉÉ$ ,
=
ÉÉ- .
$str
ÉÉ/ 4
;
ÉÉ4 5
else
ÑÑ 
if
ÑÑ 
(
ÑÑ 
value
ÑÑ 
<
ÑÑ 
$num
ÑÑ !
)
ÑÑ! "
Num2Text
ÑÑ# +
=
ÑÑ, -
$str
ÑÑ. 4
+
ÑÑ5 6
toText
ÑÑ7 =
(
ÑÑ= >
value
ÑÑ> C
%
ÑÑD E
$num
ÑÑF J
)
ÑÑJ K
;
ÑÑK L
else
ÖÖ 
if
ÖÖ 
(
ÖÖ 
value
ÖÖ 
<
ÖÖ 
$num
ÖÖ $
)
ÖÖ$ %
{
ÖÖ& '
Num2Text
ÜÜ 
=
ÜÜ 
toText
ÜÜ !
(
ÜÜ! "
Math
ÜÜ" &
.
ÜÜ& '
Truncate
ÜÜ' /
(
ÜÜ/ 0
value
ÜÜ0 5
/
ÜÜ6 7
$num
ÜÜ8 <
)
ÜÜ< =
)
ÜÜ= >
+
ÜÜ? @
$str
ÜÜA G
;
ÜÜG H
if
áá 
(
áá 
(
áá 
value
áá 
%
áá 
$num
áá !
)
áá! "
>
áá# $
$num
áá% &
)
áá& '
Num2Text
áá( 0
=
áá1 2
Num2Text
áá3 ;
+
áá< =
$str
áá> A
+
ááB C
toText
ááD J
(
ááJ K
value
ááK P
%
ááQ R
$num
ááS W
)
ááW X
;
ááX Y
}
àà 
else
àà 
if
àà 
(
àà 
value
àà 
==
àà 
$num
àà  '
)
àà' (
Num2Text
àà) 1
=
àà2 3
$str
àà4 ?
;
àà? @
else
ââ 
if
ââ 
(
ââ 
value
ââ 
<
ââ 
$num
ââ $
)
ââ$ %
Num2Text
ââ& .
=
ââ/ 0
$str
ââ1 =
+
ââ> ?
toText
ââ@ F
(
ââF G
value
ââG L
%
ââM N
$num
ââO V
)
ââV W
;
ââW X
else
ää 
if
ää 
(
ää 
value
ää 
<
ää 
$num
ää *
)
ää* +
{
ää, -
Num2Text
ãã 
=
ãã 
toText
ãã !
(
ãã! "
Math
ãã" &
.
ãã& '
Truncate
ãã' /
(
ãã/ 0
value
ãã0 5
/
ãã6 7
$num
ãã8 ?
)
ãã? @
)
ãã@ A
+
ããB C
$str
ããD P
;
ããP Q
if
åå 
(
åå 
(
åå 
value
åå 
-
åå 
Math
åå !
.
åå! "
Truncate
åå" *
(
åå* +
value
åå+ 0
/
åå1 2
$num
åå3 :
)
åå: ;
*
åå< =
$num
åå> E
)
ååE F
>
ååG H
$num
ååI J
)
ååJ K
Num2Text
ååL T
=
ååU V
Num2Text
ååW _
+
åå` a
$str
ååb e
+
ååf g
toText
ååh n
(
åån o
value
ååo t
-
ååu v
Math
ååw {
.
åå{ |
Truncateåå| Ñ
(ååÑ Ö
valueååÖ ä
/ååã å
$numååç î
)ååî ï
*ååñ ó
$numååò ü
)ååü †
;åå† °
}
çç 
else
çç 
if
çç 
(
çç 
value
çç 
==
çç 
$num
çç  -
)
çç- .
Num2Text
çç/ 7
=
çç8 9
$str
çç: E
;
ççE F
else
éé 
if
éé 
(
éé 
value
éé 
<
éé 
$num
éé *
)
éé* +
Num2Text
éé, 4
=
éé5 6
$str
éé7 C
+
ééD E
toText
ééF L
(
ééL M
value
ééM R
-
ééS T
Math
ééU Y
.
ééY Z
Truncate
ééZ b
(
ééb c
value
ééc h
/
ééi j
$num
éék x
)
ééx y
*
ééz {
$numéé| â
)ééâ ä
;ééä ã
else
èè 
{
èè 
Num2Text
êê 
=
êê 
toText
êê !
(
êê! "
Math
êê" &
.
êê& '
Truncate
êê' /
(
êê/ 0
value
êê0 5
/
êê6 7
$num
êê8 E
)
êêE F
)
êêF G
+
êêH I
$str
êêJ U
;
êêU V
if
ëë 
(
ëë 
(
ëë 
value
ëë 
-
ëë 
Math
ëë !
.
ëë! "
Truncate
ëë" *
(
ëë* +
value
ëë+ 0
/
ëë1 2
$num
ëë3 @
)
ëë@ A
*
ëëB C
$num
ëëD Q
)
ëëQ R
>
ëëS T
$num
ëëU V
)
ëëV W
Num2Text
ëëX `
=
ëëa b
Num2Text
ëëc k
+
ëël m
$str
ëën q
+
ëër s
toText
ëët z
(
ëëz {
valueëë{ Ä
-ëëÅ Ç
MathëëÉ á
.ëëá à
Truncateëëà ê
(ëëê ë
valueëëë ñ
/ëëó ò
$numëëô ¶
)ëë¶ ß
*ëë® ©
$numëë™ ∑
)ëë∑ ∏
;ëë∏ π
}
íí 
return
ìì 
Num2Text
ìì 
;
ìì 
}
îî 	
public
ññ 
Boolean
ññ '
agregarDetalleComprobante
ññ 0
(
ññ0 1$
ClsEdetallecomprobante
ññ1 G 
detalleComprobante
ññH Z
)
ññZ [
{
ññ\ ]"
tbDetalleComprobante
òò  
tbl
òò! $
=
òò% &"
tbDetalleComprobante
òò' ;
.
òò; <
crear
òò< A
(
òòA B 
detalleComprobante
òòB T
.
òòT U
Serie
òòU Z
,
òòZ [ 
detalleComprobante
òò\ n
.
òòn o
Numero
òòo u
,
òòu v!
detalleComprobanteòòw â
.òòâ ä

CodigoLoteòòä î
,òòî ï"
detalleComprobanteòòñ ®
.òò® ©
Descripcionòò© ¥
,òò¥ µ"
detalleComprobanteòò∂ »
.òò» …
Cantidadòò… —
,òò— “"
detalleComprobanteòò” Â
.òòÂ Ê
PrecioòòÊ Ï
,òòÏ Ì"
detalleComprobanteòòÓ Ä
.òòÄ Å
ImporteòòÅ à
)òòà â
;òòâ ä
return
ôô 
datos
ôô 
.
ôô '
agregarDetalleComprobante
ôô 2
(
ôô2 3
tbl
ôô3 6
)
ôô6 7
;
ôô7 8
}
öö 	
public
úú 
Boolean
úú  
agregarComprobante
úú )
(
úú) *
ClsEcomprobante
úú* 9
comprobante
úú: E
)
úúE F
{
úúG H
tbComprobante
ûû 
tbl
ûû 
=
ûû 
tbComprobante
ûû  -
.
ûû- .
crear
ûû. 3
(
ûû3 4
comprobante
ûû4 ?
.
ûû? @
Serie
ûû@ E
,
ûûE F
comprobante
ûûG R
.
ûûR S
Numero
ûûS Y
,
ûûY Z
comprobante
ûû[ f
.
ûûf g
Fecha
ûûg l
,
ûûl m
comprobante
ûûn y
.
ûûy z
DniEmpleadoûûz Ö
,ûûÖ Ü
comprobanteûûá í
.ûûí ì

DniClienteûûì ù
,ûûù û
comprobanteûûü ™
.ûû™ ´
Subtotalûû´ ≥
,ûû≥ ¥
comprobanteûûµ ¿
.ûû¿ ¡
Igvûû¡ ƒ
,ûûƒ ≈
comprobanteûû∆ —
.ûû— “
Totalûû“ ◊
,ûû◊ ÿ
comprobanteûûŸ ‰
.ûû‰ Â
EstadoûûÂ Î
)ûûÎ Ï
;ûûÏ Ì
return
üü 
datos
üü 
.
üü  
agregarComprobante
üü +
(
üü+ ,
tbl
üü, /
)
üü/ 0
;
üü0 1
}
†† 	
}
ßß 
}®® Ä
8F:\UPT\VII CICLO\Z JEANET\Sistema\Negocios\ClsNcorreo.cs
	namespace		 	
Negocios		
 
{		 
public

 

class

 

ClsNcorreo

 
{

 
public 
async 
Task 
MtdEnviarEmail (
(( )

ClsEcorreo) 3

esendEmail4 >
)> ?
{@ A
try 
{ 

SmtpClient 
cliente "
=# $
new% (

SmtpClient) 3
(3 4
$str4 D
,D E
$numF I
)I J
;J K
cliente 
. 
	EnableSsl !
=" #
true$ (
;( )
cliente 
. 
Timeout 
=  !
$num" (
;( )
cliente 
. 
DeliveryMethod &
=' (
SmtpDeliveryMethod) ;
.; <
Network< C
;C D
cliente 
. !
UseDefaultCredentials -
=. /
true0 4
;4 5
cliente 
. 
Credentials #
=$ %
new& )
NetworkCredential* ;
(; <

Properties< F
.F G
	ResourcesG P
.P Q
emailQ V
.V W
ToStringW _
(_ `
)` a
,a b

Propertiesc m
.m n
	Resourcesn w
.w x
password	x Ä
.
Ä Å
ToString
Å â
(
â ä
)
ä ã
)
ã å
;
å ç
MailMessage 
msg 
=  !
new" %
MailMessage& 1
(1 2
)2 3
;3 4
msg 
. 
To 
. 
Add 
( 

esendEmail %
.% &
Destinatario& 2
)2 3
;3 4
msg 
. 
Subject 
= 

esendEmail (
.( )
Asunto) /
;/ 0
msg 
. 
SubjectEncoding #
=$ %
Encoding& .
.. /
UTF8/ 3
;3 4
msg 
. 
Body 
= 

esendEmail %
.% &
Mensaje& -
;- .
msg 
. 
BodyEncoding  
=! "
Encoding# +
.+ ,
UTF8, 0
;0 1
msg 
. 

IsBodyHtml 
=  
true! %
;% &
msg 
. 
From 
= 
new 
MailAddress *
(* +

Properties+ 5
.5 6
	Resources6 ?
.? @
email@ E
.E F
ToStringF N
(N O
)O P
)P Q
;Q R
await 
Task 
. 
Run 
( 
(  
)  !
=>" $
{% &
try 
{ 
cliente 
.  
Send  $
($ %
msg% (
)( )
;) *
} 
catch 
( 
SmtpException )
e* +
)+ ,
{- .

MessageBox   "
.  " #
Show  # '
(  ' (
e  ( )
.  ) *
Message  * 1
.  1 2
ToString  2 :
(  : ;
)  ; <
)  < =
;  = >
}!! 
}## 
)## 
;## 
}$$ 
catch$$ 
($$ 
	Exception$$ 
ex$$ !
)$$! "
{$$# $

MessageBox%% 
.%% 
Show%% 
(%%  
ex%%  "
.%%" #
Message%%# *
)%%* +
;%%+ ,
}&& 
}'' 	
}(( 
})) ˘>
=F:\UPT\VII CICLO\Z JEANET\Sistema\Negocios\ClsNdispositivo.cs
	namespace 	
Negocios
 
{ 
public 

class 
ClsNdispositivo  
{! "
readonly 
ClsDdispositivo  
datos! &
=' (
new) ,
ClsDdispositivo- <
(< =
)= >
;> ?
public

 
string

 '
MtdCalcularSerieDispositivo

 1
(

1 2
string

2 8
codigo

9 ?
,

? @
int

A D
i

E F
)

F G
{

H I
if 
( 
i 
. 
ToString 
( 
) 
. 
Length #
==$ &
$num' (
)( )
{* +
return 
codigo 
+ 
$str  #
+$ %
$str& +
+, -
i. /
./ 0
ToString0 8
(8 9
)9 :
;: ;
} 
else 
if 
( 
i 
. 
ToString !
(! "
)" #
.# $
Length$ *
==+ -
$num. /
)/ 0
{1 2
return 
codigo 
+ 
$str  #
+$ %
$str& *
++ ,
i- .
.. /
ToString/ 7
(7 8
)8 9
;9 :
} 
else 
if 
( 
i 
. 
ToString !
(! "
)" #
.# $
Length$ *
==+ -
$num. /
)/ 0
{1 2
return 
codigo 
+ 
$str  #
+$ %
$str& )
+* +
i, -
.- .
ToString. 6
(6 7
)7 8
;8 9
} 
else 
{ 
return 
codigo 
+ 
$str  #
+$ %
i& '
.' (
ToString( 0
(0 1
)1 2
;2 3
} 
} 	
public 
	ArrayList 
listarDispositivos +
(+ ,
), -
{. /
	ArrayList 
dispositivos "
=# $
new% (
	ArrayList) 2
(2 3
)3 4
;4 5
foreach 
( 
var 
item 
in  
datos! &
.& '
listarDispositivos' 9
(9 :
): ;
); <
{= >
ClsEdispositivo 
dispositivo  +
=, -
ClsEdispositivo. =
.= >
crear> C
(C D
itemD H
.H I
SerieDispositivoI Y
,Y Z
item[ _
._ `
CodLote` g
,g h
itemi m
.m n
Estadon t
)t u
;u v
dispositivos 
. 
Add  
(  !
dispositivo! ,
), -
;- .
} 
return 
dispositivos 
;  
} 	
public!! 
	ArrayList!! )
listarDispositivosDisponibles!! 6
(!!6 7
string!!7 =
filtro!!> D
)!!D E
{!!F G
	ArrayList"" 
dispositivos"" "
=""# $
new""% (
	ArrayList"") 2
(""2 3
)""3 4
;""4 5
foreach## 
(## 
var## 
item## 
in##  
datos##! &
.##& ')
listarDispositivosDisponibles##' D
(##D E
filtro##E K
)##K L
)##L M
{##N O
ClsEdispositivo$$ 
empleado$$  (
=$$) *
ClsEdispositivo$$+ :
.$$: ;
crear$$; @
($$@ A
item$$A E
.$$E F
SerieDispositivo$$F V
,$$V W
item$$X \
.$$\ ]
CodLote$$] d
,$$d e
item$$f j
.$$j k
Estado$$k q
)$$q r
;$$r s
dispositivos%% 
.%% 
Add%%  
(%%  !
empleado%%! )
)%%) *
;%%* +
}&& 
return'' 
dispositivos'' 
;''  
}(( 	
public** 
bool** 
agregarDispositivos** '
(**' (
ClsElote**( 0
en**1 3
)**3 4
{**5 6
bool++ 
result++ 
=++ 
true++ 
;++ 
for,, 
(,, 
int,, 
i,, 
=,, 
$num,, 
;,, 
i,, 
<,, 
en,,  "
.,," #
Cantidad,,# +
;,,+ ,
i,,- .
++,,. 0
),,0 1
{,,2 3
ClsEdispositivo-- 
dispositivo--  +
=--, -
ClsEdispositivo--. =
.--= >
crear--> C
(--C D'
MtdCalcularSerieDispositivo--D _
(--_ `
en--` b
.--b c
CodLote--c j
,--j k
i--l m
)--m n
,--n o
en--p r
.--r s
CodLote--s z
,--z {
$str--| 
)	-- Ä
;
--Ä Å
tbDispositivos.. 
tbl.. "
=..# $
tbDispositivos..% 3
...3 4
crear..4 9
(..9 :
dispositivo..: E
...E F
SerieDispositivo..F V
,..V W
dispositivo..W b
...b c
CodLote..c j
,..j k
dispositivo..k v
...v w
Estado..w }
)..} ~
;..~ 
result// 
=// 
datos// 
.// 
agregarDispositivo// 1
(//1 2
tbl//2 5
)//5 6
&&//7 9
result//: @
;//@ A
}00 
return11 
result11 
;11 
}22 	
public44 
bool44 "
desactivarDispositivos44 *
(44* +"
ClsEdetallecomprobante44+ A
detalleComprobante44B T
,44T U
	DataTable44V _
disponibles44` k
)44k l
{44m n
bool55 
result55 
=55 
true55 
;55 
for66 
(66 
int66 
i66 
=66 
$num66 
;66 
i66 
<66 
detalleComprobante66  2
.662 3
Cantidad663 ;
;66; <
i66= >
++66> @
)66@ A
{66B C
ClsEdispositivo77 
dispositivo77  +
=77, -
ClsEdispositivo77. =
.77= >
crear77> C
(77C D
disponibles77D O
.77O P
Rows77P T
[77T U
i77U V
]77V W
[77W X
$num77X Y
]77Y Z
.77Z [
ToString77[ c
(77c d
)77d e
,77e f
disponibles77g r
.77r s
Rows77s w
[77w x
i77x y
]77y z
[77z {
$num77{ |
]77| }
.77} ~
ToString	77~ Ü
(
77Ü á
)
77á à
,
77à â
$str
77ä ç
)
77ç é
;
77é è
tbDispositivos88 
tbl88 "
=88# $
tbDispositivos88% 3
.883 4
crear884 9
(889 :
dispositivo88: E
.88E F
SerieDispositivo88F V
,88V W
dispositivo88X c
.88c d
CodLote88d k
,88k l
dispositivo88m x
.88x y
Estado88y 
)	88 Ä
;
88Ä Å
result99 
=99 
datos99 
.99 
modificarEstado99 .
(99. /
tbl99/ 2
)992 3
&&994 6
result997 =
;99= >
};; 
return<< 
result<< 
;<< 
}== 	
}>> 
}?? Ò=
:F:\UPT\VII CICLO\Z JEANET\Sistema\Negocios\ClsNempleado.cs
	namespace 	
Negocios
 
{ 
public 

class 
ClsNempleado 
{ 
readonly 
ClsDempleado 
datos #
=$ %
new& )
ClsDempleado* 6
(6 7
)7 8
;8 9
public		 
bool		 
agregarEmpleado		 #
(		# $
ClsEempleado		$ 0
empleado		1 9
)		9 :
{		; <
tbEmpleados

 
tbl

 
=

 
tbEmpleados

 )
.

) *
crear

* /
(

/ 0
empleado

0 8
.

8 9
DniEmpleado

9 D
,

D E
empleado

F N
.

N O
Nombres

O V
,

V W
empleado

X `
.

` a
	Apellidos

a j
,

j k
empleado

l t
.

t u
	Direccion

u ~
,

~ 
empleado


Ä à
.


à â
Correo


â è
,


è ê
empleado


ë ô
.


ô ö
Telefono


ö ¢
,


¢ £
empleado


§ ¨
.


¨ ≠
Codigo_Cargo


≠ π
,


π ∫
empleado


ª √
.


√ ƒ
idTurno


ƒ À
,


À Ã
empleado


Õ ’
.


’ ÷
Estado


÷ ‹
,


‹ ›
empleado


ﬁ Ê
.


Ê Á
Usuario


Á Ó
,


Ó Ô
empleado


 ¯
.


¯ ˘
Contrase√±a


˘ É
)


É Ñ
;


Ñ Ö
return 
datos 
. 
agregarEmpleado (
(( )
tbl) ,
), -
;- .
} 	
public 
bool 
modificarEmpleado %
(% &
ClsEempleado& 2
empleado3 ;
); <
{= >
tbEmpleados 
tbl 
= 
tbEmpleados )
.) *
crear* /
(/ 0
empleado0 8
.8 9
DniEmpleado9 D
,D E
empleadoF N
.N O
NombresO V
,V W
empleadoX `
.` a
	Apellidosa j
,j k
empleadol t
.t u
	Direccionu ~
,~ 
empleado
Ä à
.
à â
Correo
â è
,
è ê
empleado
ë ô
.
ô ö
Telefono
ö ¢
,
¢ £
empleado
§ ¨
.
¨ ≠
Codigo_Cargo
≠ π
,
π ∫
empleado
ª √
.
√ ƒ
idTurno
ƒ À
,
À Ã
empleado
Õ ’
.
’ ÷
Estado
÷ ‹
,
‹ ›
empleado
ﬁ Ê
.
Ê Á
Usuario
Á Ó
,
Ó Ô
empleado
 ¯
.
¯ ˘
Contrase√±a
˘ É
)
É Ñ
;
Ñ Ö
return 
datos 
. 
modificarEmpleado *
(* +
tbl+ .
). /
;/ 0
} 	
public 
	ArrayList 
listarEmpleados (
(( )
)) *
{+ ,
	ArrayList 
	empleados 
=  !
new" %
	ArrayList& /
(/ 0
)0 1
;1 2
foreach 
( 
var 
item 
in  
datos! &
.& '
listarEmpleado' 5
(5 6
)6 7
)7 8
{9 :
ClsEempleado 
empleado %
=& '
ClsEempleado( 4
.4 5
crear5 :
(: ;
item; ?
.? @
DniEmpleado@ K
,K L
itemM Q
.Q R
NombresR Y
,Y Z
item[ _
._ `
	Apellidos` i
,i j
itemk o
.o p
	Direccionp y
,y z
item{ 
.	 Ä
Correo
Ä Ü
,
Ü á
item
à å
.
å ç
Telefono
ç ï
,
ï ñ
item
ó õ
.
õ ú
idTurno
ú £
,
£ §
item
• ©
.
© ™
Codigo_Cargo
™ ∂
,
∂ ∑
item
∏ º
.
º Ω
Estado
Ω √
,
√ ƒ
item
≈ …
.
…  
Usuario
  —
,
— “
item
” ◊
.
◊ ÿ
Contrase√±a
ÿ ‚
)
‚ „
;
„ ‰
	empleados 
. 
Add 
( 
empleado &
)& '
;' (
} 
return 
	empleados 
; 
} 	
public 
	ArrayList 
filtrarEmpleados )
() *
string* 0
filtro1 7
)7 8
{9 :
	ArrayList 
	empleados 
=  !
new" %
	ArrayList& /
(/ 0
)0 1
;1 2
foreach 
( 
var 
item 
in  
datos! &
.& '
filtrarEmpleado' 6
(6 7
filtro7 =
)= >
)> ?
{@ A
ClsEempleado 
empleado %
=& '
ClsEempleado( 4
.4 5
crearFiltro5 @
(@ A
itemA E
.E F
DniEmpleadoF Q
,Q R
itemS W
.W X
NombresX _
,_ `
itema e
.e f
	Apellidosf o
,o p
itemq u
.u v
	Direccionv 
,	 Ä
item
Å Ö
.
Ö Ü
Codigo_Cargo
Ü í
,
í ì
item
î ò
.
ò ô
Telefono
ô °
,
° ¢
item
£ ß
.
ß ®
Estado
® Æ
)
Æ Ø
;
Ø ∞
	empleados   
.   
Add   
(   
empleado   &
)  & '
;  ' (
}!! 
return"" 
	empleados"" 
;"" 
}## 	
public%% 
	ArrayList%% 
busquedaEmpleado%% )
(%%) *
string%%* 0
codigoEmpleado%%1 ?
)%%? @
{%%A B
	ArrayList&& 
	empleados&& 
=&&  !
new&&" %
	ArrayList&&& /
(&&/ 0
)&&0 1
;&&1 2
foreach'' 
('' 
var'' 
item'' 
in''  
datos''! &
.''& '
busquedaEmpleado''' 7
(''7 8
codigoEmpleado''8 F
)''F G
)''G H
{''I J
ClsEempleado(( 
empleado(( %
=((& '
ClsEempleado((( 4
.((4 5
crear((5 :
(((: ;
item((; ?
.((? @
DniEmpleado((@ K
,((K L
item((M Q
.((Q R
Nombres((R Y
,((Y Z
item(([ _
.((_ `
	Apellidos((` i
,((i j
item((k o
.((o p
	Direccion((p y
,((y z
item(({ 
.	(( Ä
Correo
((Ä Ü
,
((Ü á
item
((à å
.
((å ç
Telefono
((ç ï
,
((ï ñ
item
((ó õ
.
((õ ú
idTurno
((ú £
,
((£ §
item
((• ©
.
((© ™
Codigo_Cargo
((™ ∂
,
((∂ ∑
item
((∏ º
.
((º Ω
Estado
((Ω √
,
((√ ƒ
item
((≈ …
.
((…  
Usuario
((  —
,
((— “
item
((” ◊
.
((◊ ÿ
Contrase√±a
((ÿ ‚
)
((‚ „
;
((„ ‰
	empleados)) 
.)) 
Add)) 
()) 
empleado)) &
)))& '
;))' (
}** 
return++ 
	empleados++ 
;++ 
},, 	
}-- 
}.. ®
=F:\UPT\VII CICLO\Z JEANET\Sistema\Negocios\ClsNIncidencias.cs
	namespace 	
Negocios
 
{ 
public 

class 
ClsNIncidencias  
{! "
readonly 

ClsDalerta 
datos !
=" #
new$ '

ClsDalerta( 2
(2 3
)3 4
;4 5
public

 
	ArrayList

 
listarIncidencias

 *
(

* +
)

+ ,
{

- .
	ArrayList 
	empleados 
=  !
new" %
	ArrayList& /
(/ 0
)0 1
;1 2
foreach 
( 
var 
item 
in  
datos! &
.& '
listarAlerta' 3
(3 4
)4 5
)5 6
{7 8

ClsEalerta 
empleado #
=$ %

ClsEalerta& 0
.0 1
crear1 6
(6 7
item7 ;
.; <
DniCli< B
,B C
itemD H
.H I
LatitudI P
,P Q
itemR V
.V W
LongitudW _
,_ `
(a b
DateTimeb j
)j k
itemk o
.o p
Fechap u
,u v
itemw {
.{ |
Hora	| Ä
,
Ä Å
(
Ç É
int
É Ü
)
Ü á
item
á ã
.
ã å
idTurno
å ì
,
ì î
item
ï ô
.
ô ö
estado
ö †
)
† °
;
° ¢
	empleados 
. 
Add 
( 
empleado &
)& '
;' (
} 
return 
	empleados 
; 
} 	
} 
} À
8F:\UPT\VII CICLO\Z JEANET\Sistema\Negocios\ClsNkardex.cs
	namespace 	
Negocios
 
{ 
public 

class 

ClsNkardex 
{ 
readonly 

ClsDkardex 
datos !
=" #
new$ '

ClsDkardex( 2
(2 3
)3 4
;4 5
public

 
bool

 
agregarKardex

 !
(

! "

ClsEkardex

" ,
kardex

- 3
)

3 4
{

5 6
tbKardex 
tbl 
= 
tbKardex #
.# $
crear$ )
() *
kardex* 0
.0 1
CodLote1 8
,8 9
kardex: @
.@ A
DniEmpleadoA L
,L M
kardexN T
.T U
DescripcionU `
,` a
kardexb h
.h i
Cantidadi q
,q r
kardexs y
.y z
PrecioUnitario	z à
,
à â
kardex
ä ê
.
ê ë
Estado
ë ó
,
ó ò
kardex
ô ü
.
ü †
Hora
† §
,
§ •
kardex
¶ ¨
.
¨ ≠
Fecha
≠ ≤
)
≤ ≥
;
≥ ¥
return 
datos 
. 
agregarKardex &
(& '
tbl' *
)* +
;+ ,
} 	
public 
	ArrayList 
listarKardex %
(% &
)& '
{( )
	ArrayList 
kardex 
= 
new "
	ArrayList# ,
(, -
)- .
;. /
foreach 
( 
var 
item 
in  
datos! &
.& '
listarKardex' 3
(3 4
)4 5
)5 6
{7 8

ClsEkardex 
elemento #
=$ %

ClsEkardex& 0
.0 1
crear1 6
(6 7
item7 ;
.; <
CodLote< C
,C D
itemE I
.I J
DniEmpleadoJ U
,U V
itemW [
.[ \
Descripcion\ g
,g h
(i j
intj m
)m n
itemn r
.r s
Cantidads {
,{ |
(} ~
decimal	~ Ö
)
Ö Ü
item
Ü ä
.
ä ã
PrecioUnitario
ã ô
,
ô ö
item
õ ü
.
ü †
Estado
† ¶
,
¶ ß
item
® ¨
.
¨ ≠
Hora
≠ ±
,
± ≤
(
≥ ¥
DateTime
¥ º
)
º Ω
item
Ω ¡
.
¡ ¬
Fecha
¬ «
)
« »
;
» …
kardex 
. 
Add 
( 
elemento #
)# $
;$ %
} 
return 
kardex 
; 
} 	
} 
} ñw
7F:\UPT\VII CICLO\Z JEANET\Sistema\Negocios\ClsNlogin.cs
	namespace 	
Negocios
 
{ 
public 

class 
	ClsNlogin 
{ 
readonly

 
ClsDsesiones

 
obSesion

 &
=

' (
new

) ,
ClsDsesiones

- 9
(

9 :
)

: ;
;

; <
readonly 
ClsDempleado 

obEmpleado (
=) *
new+ .
ClsDempleado/ ;
(; <
)< =
;= >
public 
int 
[ 
] 
GenerarNumeros #
(# $
)$ %
{& '
int 
j 
= 
$num 
; 
int 
x 
= 
$num 
; 
int 
[ 
] 
temp 
= 
new 
int  
[  !
$num! #
]# $
;$ %
for 
( 
int 
i 
= 
$num 
; 
i 
< 
temp  $
.$ %
Length% +
;+ ,
i- .
++. 0
)0 1
{2 3
temp 
[ 
i 
] 
= 
$num 
; 
} 
bool 
ver 
= 
true 
; 
Random 
ran 
= 
new 
Random #
(# $
)$ %
;% &
do 
{ 
ver 
= 
false 
; 
x 
= 
ran 
. 
Next 
( 
$num 
, 
$num  "
)" #
;# $
for 
( 
int 
i 
= 
$num 
; 
i  !
<" #
temp$ (
.( )
Length) /
;/ 0
i1 2
++2 4
)4 5
{6 7
if 
( 
x 
== 
temp !
[! "
i" #
]# $
)$ %
{& '
ver 
= 
false #
;# $
break 
; 
} 
else 
{ 
ver 
= 
true "
;" #
}   
}!! 
if"" 
("" 
ver"" 
)"" 
{"" 
temp## 
[## 
j## 
]## 
=## 
x## 
;##  
j$$ 
++$$ 
;$$ 
}%% 
}&& 
while&& 
(&& 
j&& 
<&& 
$num&& 
)&& 
;&& 
return'' 
temp'' 
;'' 
}(( 	
public** 
bool** 
cambiarContrasenia** &
(**& '
string**' -
clave**. 3
,**3 4
string**4 :
dni**; >
)**> ?
{**@ A
return++ 

obEmpleado++ 
.++  
modificarContrase√±a++ 1
(++1 2
clave++2 7
,++7 8
dni++8 ;
)++; <
;++< =
},, 	
public.. 
	ArrayList.. 
verificarExistencia.. ,
(.., -
string..- 3
texto..4 9
)..9 :
{..; <
	ArrayList// 
	empleados// 
=//  !
new//" %
	ArrayList//& /
(/// 0
)//0 1
;//1 2
foreach00 
(00 
var00 
item00 
in00 

obEmpleado00  *
.00* +
verificarExistencia00+ >
(00> ?
texto00? D
)00D E
)00E F
{00G H
ClsEempleado11 
empleado11 %
=11& '
ClsEempleado11( 4
.114 5
crear115 :
(11: ;
item22, 0
.220 1
DniEmpleado221 <
,22< =
item33, 0
.330 1
Nombres331 8
,338 9
item44, 0
.440 1
	Apellidos441 :
,44: ;
item55, 0
.550 1
	Direccion551 :
,55: ;
item66, 0
.660 1
Correo661 7
,667 8
item77, 0
.770 1
Telefono771 9
,779 :
item88, 0
.880 1
idTurno881 8
,888 9
item99, 0
.990 1
Codigo_Cargo991 =
,99= >
item::, 0
.::0 1
Estado::1 7
,::7 8
item;;, 0
.;;0 1
Usuario;;1 8
,;;8 9
item<<, 0
.<<0 1
Contrase√±a<<1 ;
)<<; <
;<<< =
	empleados== 
.== 
Add== 
(== 
empleado== &
)==& '
;==' (
}>> 
return?? 
	empleados?? 
;?? 
}@@ 	
publicBB 
stringBB  
MtdGenerarNuevaClaveBB *
(BB* +
)BB+ ,
{BB- .
RandomCC 
rndCC 
=CC 
newCC 
RandomCC #
(CC# $
)CC$ %
;CC% &
returnDD 
rndDD 
.DD 
NextDD 
(DD 
$numDD "
,DD" #
$numDD$ +
)DD+ ,
.DD, -
ToStringDD- 5
(DD5 6
)DD6 7
;DD7 8
}EE 	
publicGG 
	DataTableGG 
ValidarLoginGG %
(GG% &
stringGG& ,
usuarioGG- 4
)GG4 5
{GG6 7
	DataTableHH 
dtHH 
=HH 
newHH 
	DataTableHH (
(HH( )
)HH) *
;HH* +
dtII 
.II 
ColumnsII 
.II 
AddII 
(II 
$strII (
)II( )
;II) *
dtJJ 
.JJ 
ColumnsJJ 
.JJ 
AddJJ 
(JJ 
$strJJ $
)JJ$ %
;JJ% &
dtKK 
.KK 
ColumnsKK 
.KK 
AddKK 
(KK 
$strKK &
)KK& '
;KK' (
dtLL 
.LL 
ColumnsLL 
.LL 
AddLL 
(LL 
$strLL &
)LL& '
;LL' (
dtMM 
.MM 
ColumnsMM 
.MM 
AddMM 
(MM 
$strMM #
)MM# $
;MM$ %
dtNN 
.NN 
ColumnsNN 
.NN 
AddNN 
(NN 
$strNN %
)NN% &
;NN& '
dtOO 
.OO 
ColumnsOO 
.OO 
AddOO 
(OO 
$strOO )
)OO) *
;OO* +
dtPP 
.PP 
ColumnsPP 
.PP 
AddPP 
(PP 
$strPP $
)PP$ %
;PP% &
dtQQ 
.QQ 
ColumnsQQ 
.QQ 
AddQQ 
(QQ 
$strQQ #
)QQ# $
;QQ$ %
dtRR 
.RR 
ColumnsRR 
.RR 
AddRR 
(RR 
$strRR $
)RR$ %
;RR% &
dtSS 
.SS 
ColumnsSS 
.SS 
AddSS 
(SS 
$strSS '
)SS' (
;SS( )
foreachTT 
(TT 
varTT 
itemTT 
inTT 

obEmpleadoTT  *
.TT* +
buscarPorUsuarioTT+ ;
(TT; <
usuarioTT< C
)TTC D
)TTD E
{TTF G
dtUU 
.UU 
RowsUU 
.UU 
AddUU 
(UU 
itemUU  
.UU  !
DniEmpleadoUU! ,
,UU, -
itemUU. 2
.UU2 3
NombresUU3 :
,UU: ;
itemUU< @
.UU@ A
	ApellidosUUA J
,UUJ K
itemUUL P
.UUP Q
	DireccionUUQ Z
,UUZ [
itemVV 
.VV 
CorreoVV 
,VV 
itemVV #
.VV# $
TelefonoVV$ ,
,VV, -
itemVV. 2
.VV2 3
Codigo_CargoVV3 ?
,VV? @
itemVVA E
.VVE F
idTurnoVVF M
,VVM N
itemVVO S
.VVS T
EstadoVVT Z
,VVZ [
itemVV\ `
.VV` a
UsuarioVVa h
,VVh i
itemVVj n
.VVn o
Contrase√±aVVo y
)VVy z
;VVz {
}WW 
returnYY 
dtYY 
;YY 
}ZZ 	
public\\ 
	DataTable\\ 
buscarSesion\\ %
(\\% &
string\\& ,
usuario\\- 4
)\\4 5
{\\6 7
	DataTable]] 
dt]] 
=]] 
obSesion]] #
.]]# $
buscarSesion]]$ 0
(]]0 1
usuario]]1 8
)]]8 9
;]]9 :
return^^ 
dt^^ 
;^^ 
}__ 	
publicbb 
voidbb 
MtdCerrarSesionbb #
(bb# $
stringbb$ *
usuariobb+ 2
)bb2 3
{bb4 5
obSesioncc 
.cc 
eliminarSesioncc #
(cc# $
usuariocc$ +
)cc+ ,
;cc, -
}dd 	
publicff 
boolff 
MtdGuardarSesionff $
(ff$ %
stringff% +
usuarioff, 3
)ff3 4
{ff5 6
returngg 
obSesiongg 
.gg 
guardarSesiongg )
(gg) *
usuariogg* 1
)gg1 2
;gg2 3
}hh 	
publicjj 
intjj 
MtdVerificarCuentajj %
(jj% &
	DataTablejj& /
datajj0 4
,jj4 5
	ClsEloginjj6 ?
ejj@ A
,jjA B
intjjC F
solicitajjG O
)jjO P
{jjQ R
intkk 
horakk 
=kk 
Convertkk 
.kk 
ToInt32kk &
(kk& '
DateTimekk' /
.kk/ 0
Nowkk0 3
.kk3 4
ToStringkk4 <
(kk< =
$strkk= E
)kkE F
)kkF G
;kkG H
intll 
resultll 
=ll 
$numll 
;ll 
ifmm 
(mm 
datamm 
.mm 
Rowsmm 
[mm 
$nummm 
]mm 
[mm 
$nummm 
]mm  
.mm  !
ToStringmm! )
(mm) *
)mm* +
.mm+ ,
Equalsmm, 2
(mm2 3
emm3 4
.mm4 5
Clavemm5 :
)mm: ;
)mm; <
{mm= >
ifnn 
(nn 
datann 
.nn 
Rowsnn 
[nn 
$numnn 
]nn  
[nn  !
$numnn! "
]nn" #
.nn# $
ToStringnn$ ,
(nn, -
)nn- .
.nn. /
Equalsnn/ 5
(nn5 6
$strnn6 9
)nn9 :
)nn: ;
{nn< =
ifoo 
(oo 
dataoo 
.oo 
Rowsoo !
[oo! "
$numoo" #
]oo# $
[oo$ %
$numoo% &
]oo& '
.oo' (
ToStringoo( 0
(oo0 1
)oo1 2
.oo2 3
Equalsoo3 9
(oo9 :
$stroo: ?
)oo? @
||ooA C
dataooD H
.ooH I
RowsooI M
[ooM N
$numooN O
]ooO P
[ooP Q
$numooQ R
]ooR S
.ooS T
ToStringooT \
(oo\ ]
)oo] ^
.oo^ _
Equalsoo_ e
(ooe f
$stroof k
)ook l
||oom o
solicitaoop x
==ooy {
$numoo| }
)oo} ~
{	oo Ä
boolpp 
verifpp "
=pp# $
falsepp% *
;pp* +
switchqq 
(qq  
Convertqq  '
.qq' (
ToInt32qq( /
(qq/ 0
dataqq0 4
.qq4 5
Rowsqq5 9
[qq9 :
$numqq: ;
]qq; <
[qq< =
$numqq= >
]qq> ?
)qq? @
)qq@ A
{qqB C
caserr  
$numrr! "
:rr" #
ifss  "
(ss# $
horass$ (
>=ss) +
$numss, 2
&&ss3 5
horass6 :
<ss; <
$numss= C
)ssC D
{ssE F
veriftt$ )
=tt* +
truett, 0
;tt0 1
}uu  !
elseuu" &
{uu' (
verifvv$ )
=vv* +
falsevv, 1
;vv1 2
}ww  !
breakxx  %
;xx% &
caseyy  
$numyy! "
:yy" #
ifzz  "
(zz# $
horazz$ (
>=zz) +
$numzz, 2
&&zz3 5
horazz6 :
<zz; <
$numzz= C
)zzC D
{zzE F
verif{{$ )
={{* +
true{{, 0
;{{0 1
}||  !
else||" &
{||' (
verif}}$ )
=}}* +
false}}, 1
;}}1 2
}~~  !
break  %
;% &
case
ÄÄ  
$num
ÄÄ! "
:
ÄÄ" #
if
ÅÅ  "
(
ÅÅ# $
hora
ÅÅ$ (
>=
ÅÅ) +
$num
ÅÅ, 2
&&
ÅÅ3 5
hora
ÅÅ6 :
<
ÅÅ; <
$num
ÅÅ= C
)
ÅÅC D
{
ÅÅE F
verif
ÇÇ$ )
=
ÇÇ* +
true
ÇÇ, 0
;
ÇÇ0 1
}
ÉÉ  !
else
ÉÉ" &
{
ÉÉ' (
verif
ÑÑ$ )
=
ÑÑ* +
false
ÑÑ, 1
;
ÑÑ1 2
}
ÖÖ  !
break
ÜÜ  %
;
ÜÜ% &
}
áá 
if
àà 
(
àà 
verif
àà !
is
àà" $
true
àà% )
)
àà) *
{
àà+ ,
if
ââ 
(
ââ  
buscarSesion
ââ  ,
(
ââ, -
data
ââ- 1
.
ââ1 2
Rows
ââ2 6
[
ââ6 7
$num
ââ7 8
]
ââ8 9
[
ââ9 :
$num
ââ: ;
]
ââ; <
.
ââ< =
ToString
ââ= E
(
ââE F
)
ââF G
)
ââG H
.
ââH I
Rows
ââI M
.
ââM N
Count
ââN S
==
ââT V
$num
ââW X
)
ââX Y
{
ââZ [
result
ää  &
=
ää' (
$num
ää) *
;
ää* +
}
ãã 
else
ãã "
{
ãã# $
result
åå  &
=
åå' (
$num
åå) *
;
åå* +
}
çç 
}
éé 
else
éé 
{
éé  
result
èè "
=
èè# $
$num
èè% &
;
èè& '
}
êê 
}
ëë 
else
ëë 
{
ëë 
result
íí 
=
íí  
$num
íí! "
;
íí" #
}
ìì 
}
îî 
else
îî 
{
îî 
result
ïï 
=
ïï 
$num
ïï 
;
ïï 
}
ññ 
}
óó 
else
óó 
{
óó 
result
òò 
=
òò 
$num
òò 
;
òò 
}
ôô 
return
öö 
result
öö 
;
öö 
}
õõ 	
}
úú 
}ùù çL
6F:\UPT\VII CICLO\Z JEANET\Sistema\Negocios\ClsNlote.cs
	namespace 	
Negocios
 
{ 
public 

class 
ClsNlote 
{ 
readonly 
ClsDlote 
datos 
=  !
new" %
ClsDlote& .
(. /
)/ 0
;0 1
public 
string 
MtdGeneraraCodigo '
(' (
)( )
{* +
string		 
numero		 
=		 
$str		 
;		  
int

 
cant

 
=

 
listarLotes

 "
(

" #
)

# $
.

$ %
Count

% *
;

* +
cant 
++ 
; 
if 
( 
cant 
< 
$num 
) 
{ 
numero 
= 
$str 
+  
cant! %
.% &
ToString& .
(. /
)/ 0
;0 1
} 
else 
if 
( 
cant 
< 
$num !
)! "
{# $
numero 
= 
$str 
+ 
cant  $
.$ %
ToString% -
(- .
). /
;/ 0
} 
else 
if 
( 
cant 
< 
$num "
)" #
{$ %
numero 
= 
$str 
+ 
cant #
.# $
ToString$ ,
(, -
)- .
;. /
} 
else 
if 
( 
cant 
< 
$num #
)# $
{% &
numero 
= 
cant 
. 
ToString &
(& '
)' (
;( )
} 
return 
numero 
; 
} 	
public 
	ArrayList 
listarLotes $
($ %
)% &
{' (
	ArrayList 
lotes 
= 
new !
	ArrayList" +
(+ ,
), -
;- .
foreach 
( 
var 
item 
in  
datos! &
.& '
listarLotes' 2
(2 3
)3 4
)4 5
{6 7
ClsElote 
lote 
= 
ClsElote  (
.( )
crear) .
(. /
item/ 3
.3 4
CodLote4 ;
,; <
item= A
.A B
NombreB H
,H I
itemJ N
.N O
ColorO T
,T U
itemV Z
.Z [
Ruc[ ^
,^ _
item` d
.d e
Sistema_Operativoe v
,v w
itemx |
.| }
Cantidad	} Ö
,
Ö Ü
item
á ã
.
ã å
Precio_Unitario
å õ
,
õ ú
item
ù °
.
° ¢
Forma
¢ ß
,
ß ®
item
© ≠
.
≠ Æ
Memoria
Æ µ
,
µ ∂
item
∑ ª
.
ª º
Peso
º ¿
)
¿ ¡
;
¡ ¬
lotes 
. 
Add 
( 
lote 
) 
;  
} 
return 
lotes 
; 
} 	
public!! 
	ArrayList!! 
filtrarLotes!! %
(!!% &
string!!& ,
filtro!!- 3
)!!3 4
{!!5 6
	ArrayList"" 
lotes"" 
="" 
new"" !
	ArrayList""" +
(""+ ,
)"", -
;""- .
foreach## 
(## 
var## 
item## 
in##  
datos##! &
.##& '
filtrarLotes##' 3
(##3 4
filtro##4 :
)##: ;
)##; <
{##= >
ClsElote$$ 
lote$$ 
=$$ 
ClsElote$$  (
.$$( )
crear$$) .
($$. /
item$$/ 3
.$$3 4
CodLote$$4 ;
,$$; <
item$$= A
.$$A B
Nombre$$B H
,$$H I
item$$J N
.$$N O
Color$$O T
,$$T U
item$$V Z
.$$Z [
Ruc$$[ ^
,$$^ _
item$$` d
.$$d e
Sistema_Operativo$$e v
,$$v w
item$$x |
.$$| }
Cantidad	$$} Ö
,
$$Ö Ü
item
$$á ã
.
$$ã å
Precio_Unitario
$$å õ
,
$$õ ú
item
$$ù °
.
$$° ¢
Forma
$$¢ ß
,
$$ß ®
item
$$© ≠
.
$$≠ Æ
Memoria
$$Æ µ
,
$$µ ∂
item
$$∑ ª
.
$$ª º
Peso
$$º ¿
)
$$¿ ¡
;
$$¡ ¬
lotes%% 
.%% 
Add%% 
(%% 
lote%% 
)%% 
;%%  
}&& 
return'' 
lotes'' 
;'' 
}(( 	
public** 
	ArrayList** 
busquedaLote** %
(**% &
string**& ,

codigoLote**- 7
)**7 8
{**9 :
	ArrayList++ 
lotes++ 
=++ 
new++ !
	ArrayList++" +
(+++ ,
)++, -
;++- .
foreach,, 
(,, 
var,, 
item,, 
in,,  
datos,,! &
.,,& '
busquedaLote,,' 3
(,,3 4

codigoLote,,4 >
),,> ?
),,? @
{,,A B
ClsElote-- 
lote-- 
=-- 
ClsElote--  (
.--( )
crear--) .
(--. /
item--/ 3
.--3 4
CodLote--4 ;
,--; <
item--= A
.--A B
Nombre--B H
,--H I
item--J N
.--N O
Color--O T
,--T U
item--V Z
.--Z [
Ruc--[ ^
,--^ _
item--` d
.--d e
Sistema_Operativo--e v
,--v w
item--x |
.--| }
Cantidad	--} Ö
,
--Ö Ü
item
--á ã
.
--ã å
Precio_Unitario
--å õ
,
--õ ú
item
--ù °
.
--° ¢
Forma
--¢ ß
,
--ß ®
item
--© ≠
.
--≠ Æ
Memoria
--Æ µ
,
--µ ∂
item
--∑ ª
.
--ª º
Peso
--º ¿
)
--¿ ¡
;
--¡ ¬
lotes.. 
... 
Add.. 
(.. 
lote.. 
).. 
;..  
}// 
return00 
lotes00 
;00 
}11 	
public33 
bool33 
decrementarCantidad33 '
(33' (
ClsElote33( 0
lote331 5
)335 6
{337 8
tbLotes44 
tbl44 
=44 
tbLotes44 !
.44! "
decrementar44" -
(44- .
lote44. 2
.442 3
CodLote443 :
,44: ;
lote44< @
.44@ A
Cantidad44A I
)44I J
;44J K
return55 
datos55 
.55 
decrementarLote55 (
(55( )
tbl55) ,
)55, -
;55- .
}66 	
public88 
bool88 
modificarLote88 !
(88! "
ClsElote88" *
lote88+ /
)88/ 0
{881 2
tbLotes99 
tbl99 
=99 
tbLotes99 !
.99! "
crear99" '
(99' (
lote99( ,
.99, -
CodLote99- 4
,994 5
lote996 :
.99: ;
Nombre99; A
,99A B
lote99C G
.99G H
Color99H M
,99M N
lote99O S
.99S T
Ruc99T W
,99W X
lote99Y ]
.99] ^
Sistema_Operativo99^ o
,99o p
lote99q u
.99u v
Cantidad99v ~
,99~ 
lote
99Ä Ñ
.
99Ñ Ö
Precio_Unitario
99Ö î
,
99î ï
lote
99ñ ö
.
99ö õ
Forma
99õ †
,
99† °
lote
99¢ ¶
.
99¶ ß
Memoria
99ß Æ
,
99Æ Ø
lote
99∞ ¥
.
99¥ µ
Peso
99µ π
)
99π ∫
;
99∫ ª
return:: 
datos:: 
.:: 
modificarLote:: &
(::& '
tbl::' *
)::* +
;::+ ,
};; 	
public== 
bool== 
agregarLote== 
(==  
ClsElote==  (
lote==) -
)==- .
{==/ 0
tbLotes>> 
tbl>> 
=>> 
tbLotes>> !
.>>! "
crear>>" '
(>>' (
lote>>( ,
.>>, -
CodLote>>- 4
,>>4 5
lote>>6 :
.>>: ;
Nombre>>; A
,>>A B
lote>>C G
.>>G H
Color>>H M
,>>M N
lote>>O S
.>>S T
Ruc>>T W
,>>W X
lote>>Y ]
.>>] ^
Sistema_Operativo>>^ o
,>>o p
lote>>q u
.>>u v
Cantidad>>v ~
,>>~ 
lote
>>Ä Ñ
.
>>Ñ Ö
Precio_Unitario
>>Ö î
,
>>î ï
lote
>>ñ ö
.
>>ö õ
Forma
>>õ †
,
>>† °
lote
>>¢ ¶
.
>>¶ ß
Memoria
>>ß Æ
,
>>Æ Ø
lote
>>∞ ¥
.
>>¥ µ
Peso
>>µ π
)
>>π ∫
;
>>∫ ª
return?? 
datos?? 
.?? 
agregarLote?? $
(??$ %
tbl??% (
)??( )
;??) *
}@@ 	
}AA 
}BB ƒ0
;F:\UPT\VII CICLO\Z JEANET\Sistema\Negocios\ClsNproveedor.cs
	namespace 	
Negocios
 
{ 
public 

class 
ClsNproveedor 
{  
readonly 
ClsDproveedor 
datos $
=% &
new' *
ClsDproveedor+ 8
(8 9
)9 :
;: ;
public		 
bool		 
agregarProveedor		 $
(		$ %
ClsEproveedor		% 2
	proveedor		3 <
)		< =
{		> ?
tbProveedores

 
tbl

 
=

 
tbProveedores

  -
.

- .
crear

. 3
(

3 4
	proveedor

4 =
.

= >
Ruc

> A
,

A B
	proveedor

C L
.

L M
Nombre

M S
,

S T
	proveedor

U ^
.

^ _
	Direccion

_ h
,

h i
	proveedor

j s
.

s t
Telefono

t |
,

| }
	proveedor	

~ á
.


á à
Correo


à é
,


é è
	proveedor


ê ô
.


ô ö
Estado


ö †
)


† °
;


° ¢
return 
datos 
. 
agregarProveedor )
() *
tbl* -
)- .
;. /
} 	
public 
bool 
modificarProveedor &
(& '
ClsEproveedor' 4
	proveedor5 >
)> ?
{@ A
tbProveedores 
tbl 
= 
tbProveedores  -
.- .
crear. 3
(3 4
	proveedor4 =
.= >
Ruc> A
,A B
	proveedorC L
.L M
NombreM S
,S T
	proveedorU ^
.^ _
	Direccion_ h
,h i
	proveedorj s
.s t
Telefonot |
,| }
	proveedor	~ á
.
á à
Correo
à é
,
é è
	proveedor
ê ô
.
ô ö
Estado
ö †
)
† °
;
° ¢
return 
datos 
. 
modificarProveedor +
(+ ,
tbl, /
)/ 0
;0 1
} 	
public 
	ArrayList 
listarProveedores *
(* +
)+ ,
{- .
	ArrayList 

proveedors  
=! "
new# &
	ArrayList' 0
(0 1
)1 2
;2 3
foreach 
( 
var 
item 
in  
datos! &
.& '
listarProveedor' 6
(6 7
)7 8
)8 9
{: ;
ClsEproveedor 
	proveedor '
=( )
ClsEproveedor* 7
.7 8
crear8 =
(= >
item> B
.B C
RucC F
,F G
itemH L
.L M
NombreM S
,S T
itemU Y
.Y Z
	DireccionZ c
,c d
iteme i
.i j
Telefonoj r
,r s
itemt x
.x y
Correoy 
,	 Ä
item
Å Ö
.
Ö Ü
Estado
Ü å
)
å ç
;
ç é

proveedors 
. 
Add 
( 
	proveedor (
)( )
;) *
} 
return 

proveedors 
; 
} 	
public 
	ArrayList 
filtrarProveedores +
(+ ,
string, 2
filtro3 9
)9 :
{; <
	ArrayList 
proveedores !
=" #
new$ '
	ArrayList( 1
(1 2
)2 3
;3 4
foreach 
( 
var 
item 
in  
datos! &
.& '
filtrarProveedor' 7
(7 8
filtro8 >
)> ?
)? @
{A B
ClsEproveedor 
	proveedor '
=( )
ClsEproveedor* 7
.7 8
crear8 =
(= >
item> B
.B C
RucC F
,F G
itemH L
.L M
NombreM S
,S T
itemU Y
.Y Z
	DireccionZ c
,c d
iteme i
.i j
Telefonoj r
,r s
itemt x
.x y
Correoy 
,	 Ä
item
Å Ö
.
Ö Ü
Estado
Ü å
)
å ç
;
ç é
proveedores   
.   
Add   
(    
	proveedor    )
)  ) *
;  * +
}!! 
return"" 
proveedores"" 
;"" 
}## 	
public%% 
	ArrayList%% 
busquedaProveedor%% *
(%%* +
string%%+ 1
codigoProveedor%%2 A
)%%A B
{%%C D
	ArrayList&& 
proveedores&& !
=&&" #
new&&$ '
	ArrayList&&( 1
(&&1 2
)&&2 3
;&&3 4
foreach'' 
('' 
var'' 
item'' 
in''  
datos''! &
.''& '
busquedaProveedor''' 8
(''8 9
codigoProveedor''9 H
)''H I
)''I J
{''K L
ClsEproveedor(( 
	proveedor(( '
=((( )
ClsEproveedor((* 7
.((7 8
crear((8 =
(((= >
item((> B
.((B C
Ruc((C F
,((F G
item((H L
.((L M
Nombre((M S
,((S T
item((U Y
.((Y Z
	Direccion((Z c
,((c d
item((e i
.((i j
Telefono((j r
,((r s
item((t x
.((x y
Correo((y 
,	(( Ä
item
((Å Ö
.
((Ö Ü
Estado
((Ü å
)
((å ç
;
((ç é
proveedores)) 
.)) 
Add)) 
())  
	proveedor))  )
)))) *
;))* +
}** 
return++ 
proveedores++ 
;++ 
},, 	
}-- 
}.. —#
:F:\UPT\VII CICLO\Z JEANET\Sistema\Negocios\ClsNreportes.cs
	namespace 	
Negocios
 
{ 
public 

class 
ClsNreportes 
{ 
readonly 
ClsDreporte 
datos "
=# $
new% (
ClsDreporte) 4
(4 5
)5 6
;6 7
public		 
	DataTable		 
listarIncidencias		 *
(		* +
)		+ ,
{		- .
	DataTable

 
dt

 
=

 
datos

  
.

  !
listarIncidencias

! 2
(

2 3
)

3 4
;

4 5
return 
dt 
; 
} 	
public 
	DataTable #
listarProductosSemestre 0
(0 1
)1 2
{3 4
	DataTable 
dtProductos !
=" #
datos$ )
.) *#
listarProductosSemestre* A
(A B
)B C
;C D
return 
dtProductos 
; 
} 	
public 
	DataTable "
listarProductosMensual /
(/ 0
)0 1
{2 3
	DataTable 
dtProductos !
=" #
datos$ )
.) *
listarProductosMes* <
(< =
)= >
;> ?
return 
dtProductos 
; 
} 	
public 
	DataTable  
listarProductosAnual -
(- .
). /
{0 1
	DataTable 
dtProductos !
=" #
datos$ )
.) * 
listarProductosAnual* >
(> ?
)? @
;@ A
return 
dtProductos 
; 
} 	
public 
	DataTable "
listarProductosSemanal /
(/ 0
)0 1
{2 3
	DataTable 
dtProductos !
=" #
datos$ )
.) *"
listarProductosSemanal* @
(@ A
)A B
;B C
return 
dtProductos 
; 
} 	
public 
	DataTable $
listarProductosTrimestre 1
(1 2
)2 3
{4 5
	DataTable 
dtProductos !
=" #
datos$ )
.) *$
listarProductosTrimestre* B
(B C
)C D
;D E
return   
dtProductos   
;   
}!! 	
public"" 
	DataTable"" (
listarEmpleadosVentasSemanal"" 5
(""5 6
)""6 7
{""8 9
	DataTable## 
dtProductos## !
=##" #
datos##$ )
.##) *"
listarEmpleadoVentaDia##* @
(##@ A
)##A B
;##B C
return$$ 
dtProductos$$ 
;$$ 
}%% 	
public&& 
	DataTable&& &
listarEmpleadosVentasAnual&& 3
(&&3 4
)&&4 5
{&&6 7
	DataTable'' 
dtProductos'' !
=''" #
datos''$ )
.'') *$
listarEmpleadoVentaAnual''* B
(''B C
)''C D
;''D E
return(( 
dtProductos(( 
;(( 
})) 	
public** 
	DataTable** +
listarEmpleadosVentasTrimestral** 8
(**8 9
)**9 :
{**; <
	DataTable++ 
dtProductos++ !
=++" #
datos++$ )
.++) *(
listarEmpleadoVentaTrimestre++* F
(++F G
)++G H
;++H I
return,, 
dtProductos,, 
;,, 
}-- 	
public.. 
	DataTable.. *
listarEmpleadosVentasSemestral.. 7
(..7 8
)..8 9
{..: ;
	DataTable// 
dtProductos// !
=//" #
datos//$ )
.//) *'
listarEmpleadoVentaSemestre//* E
(//E F
)//F G
;//G H
return00 
dtProductos00 
;00 
}11 	
public22 
	DataTable22 (
listarEmpleadosVentasMensual22 5
(225 6
)226 7
{228 9
	DataTable33 
dtProductos33 !
=33" #
datos33$ )
.33) *&
listarEmpleadoVentaMensual33* D
(33D E
)33E F
;33F G
return44 
dtProductos44 
;44 
}55 	
}66 
}77 ‰
5F:\UPT\VII CICLO\Z JEANET\Sistema\Negocios\ClsNsms.cs
	namespace 	
Negocios
 
{ 
public 

class 
ClsNsms 
{ 
public 
void 
MtdMandarMensaje $
($ %
ClsEsms% ,
objEM- 2
)2 3
{4 5
string

 

accountSid

 
=

 

Properties

  *
.

* +
	Resources

+ 4
.

4 5

accountSid

5 ?
.

? @
ToString

@ H
(

H I
)

I J
;

J K
string 
	authToken 
= 

Properties )
.) *
	Resources* 3
.3 4
	authToken4 =
.= >
ToString> F
(F G
)G H
;H I
string 
twilioPhone 
=  

Properties! +
.+ ,
	Resources, 5
.5 6
twilioPhone6 A
.A B
ToStringB J
(J K
)K L
;L M
TwilioClient 
. 
Init 
( 

accountSid (
,( )
	authToken* 3
)3 4
;4 5
MessageResource 
. 
Create "
(" #
body 
: 
objEM 
. 
Mensaje #
,# $
from 
: 
new 
Twilio  
.  !
Types! &
.& '
PhoneNumber' 2
(2 3
twilioPhone3 >
)> ?
,? @
to 
: 
new 
Twilio 
. 
Types $
.$ %
PhoneNumber% 0
(0 1
$str1 ?
)? @
) 
; 
} 	
} 
} Æ

8F:\UPT\VII CICLO\Z JEANET\Sistema\Negocios\ClsNsocket.cs
	namespace 	
Negocios
 
{ 
public 

class 

CLsNsocket 
{ 
readonly 
private 
Socket 
mySocket  (
;( )
public 

CLsNsocket 
( 
) 
{ 
mySocket 
= 
IO 
. 
Socket  
(  !

Properties! +
.+ ,
	Resources, 5
.5 6

linkSocket6 @
)@ A
;A B
mySocket 
. 
Connect 
( 
) 
; 
}		 	
public 
void 
	SendEvent 
( 
string $
	EventName% .
,. /
string0 6
	EventData7 @
)@ A
{B C
mySocket 
. 
Emit 
( 
	EventName #
,# $
	EventData% .
). /
;/ 0
} 	
public 
Socket 
	GetSocket 
(  
)  !
{" #
return 
mySocket 
; 
} 	
} 
} ¯¬
<F:\UPT\VII CICLO\Z JEANET\Sistema\Negocios\ClsNValidacion.cs
	namespace 	
Negocios
 
{ 
public 

class 
ClsNValidacion 
{  !
private 
static 
ClsNValidacion %
val& )
=* +
null, 0
;0 1
private		 
ClsNValidacion		 
(		 
)		  
{		! "
} 	
public 
static 
ClsNValidacion $
getValidacion% 2
(2 3
)3 4
{5 6
if 
( 
val 
== 
null 
) 
{ 
val 
= 
new 
ClsNValidacion (
(( )
)) *
;* +
} 
return 
val 
; 
} 	
public 
bool 
estaVacioONull "
(" #
ErrorProvider# 0
err1 4
,4 5
TextBox6 =
txt> A
,A B
stringC I
mensajeJ Q
)Q R
{S T
bool 
vacio 
; 
if 
( 
string 
. 
IsNullOrEmpty $
($ %
txt% (
.( )
Text) -
.- .
Trim. 2
(2 3
)3 4
)4 5
)5 6
{7 8
err 
. 
SetError 
( 
txt  
,  !
mensaje" )
)) *
;* +
vacio 
= 
true 
; 
} 
else 
{ 
err 
. 
SetError 
( 
txt  
,  !
$str" $
)$ %
;% &
vacio 
= 
false 
; 
} 
return 
vacio 
; 
} 	
public!! 
bool!!  
tieneRangoCaracteres!! (
(!!( )
ErrorProvider!!) 6
err!!7 :
,!!: ;
TextBox!!< C
txt!!D G
,!!G H
int!!I L
min!!M P
,!!P Q
int!!R U
max!!V Y
,!!Y Z
string!![ a
mensaje!!b i
)!!i j
{!!k l
bool"" 
rango"" 
;"" 
if## 
(## 
txt## 
.## 

TextLength## 
<##  
min##! $
||##% '
txt##( +
.##+ ,

TextLength##, 6
>##7 8
max##9 <
)##< =
{##> ?
err$$ 
.$$ 
SetError$$ 
($$ 
txt$$  
,$$  !
mensaje$$" )
)$$) *
;$$* +
rango%% 
=%% 
false%% 
;%% 
}&& 
else&& 
{&& 
err'' 
.'' 
SetError'' 
('' 
txt''  
,''  !
$str''" $
)''$ %
;''% &
rango(( 
=(( 
true(( 
;(( 
})) 
return** 
rango** 
;** 
}++ 	
public-- 
bool-- 
tieneFormatoCorreo-- &
(--& '
ErrorProvider--' 4
err--5 8
,--8 9
TextBox--: A
txt--B E
,--E F
string--G M
mensaje--N U
)--U V
{--W X
bool.. 
formato.. 
;.. 
string// 
	expresion// 
=// 
$str// T
;//T U
if00 
(00 
Regex00 
.00 
IsMatch00 
(00 
txt00 !
.00! "
Text00" &
.00& '
Trim00' +
(00+ ,
)00, -
,00- .
	expresion00/ 8
)008 9
&&00: <
Regex00= B
.00B C
Replace00C J
(00J K
txt00K N
.00N O
Text00O S
.00S T
Trim00T X
(00X Y
)00Y Z
,00Z [
	expresion00\ e
,00e f
String00g m
.00m n
Empty00n s
)00s t
.00t u
Length00u {
==00| ~
$num	00 Ä
)
00Ä Å
{
00Ç É
err11 
.11 
SetError11 
(11 
txt11  
,11  !
$str11" $
)11$ %
;11% &
formato22 
=22 
true22 
;22 
}33 
else33 
{33 
err44 
.44 
SetError44 
(44 
txt44  
,44  !
mensaje44" )
)44) *
;44* +
formato55 
=55 
false55 
;55  
}66 
return77 
formato77 
;77 
}88 	
public:: 
bool:: 
tieneSeleccionCmb:: %
(::% &
ErrorProvider::& 3
err::4 7
,::7 8
ComboBox::9 A
cmb::B E
,::E F
string::G M
mensaje::N U
)::U V
{::W X
bool;; 
	seleccion;; 
;;; 
if<< 
(<< 
cmb<< 
.<< 
SelectedIndex<< !
==<<" $
-<<% &
$num<<& '
)<<' (
{<<) *
err== 
.== 
SetError== 
(== 
cmb==  
,==  !
mensaje==" )
)==) *
;==* +
	seleccion>> 
=>> 
false>> !
;>>! "
}?? 
else?? 
{?? 
err@@ 
.@@ 
SetError@@ 
(@@ 
cmb@@  
,@@  !
$str@@" $
)@@$ %
;@@% &
	seleccionAA 
=AA 
trueAA  
;AA  !
}BB 
returnCC 
	seleccionCC 
;CC 
}DD 	
publicFF 
boolFF 
existeUsuarioFF !
(FF! "
ErrorProviderFF" /
errFF0 3
,FF3 4
TextBoxFF5 <
txtFF= @
,FF@ A
stringFFB H
mensajeFFI P
)FFP Q
{FFR S
boolGG 
existeGG 
=GG 
falseGG 
;GG  
ClsNempleadoHH 
NHH 
=HH 
newHH  
ClsNempleadoHH! -
(HH- .
)HH. /
;HH/ 0
foreachII 
(II 
ClsEempleadoII !
itemII" &
inII' )
NII* +
.II+ ,
listarEmpleadosII, ;
(II; <
)II< =
)II= >
{II? @
ifJJ 
(JJ 
txtJJ 
.JJ 
TextJJ 
.JJ 
EqualsJJ #
(JJ# $
itemJJ$ (
.JJ( )
UsuarioJJ) 0
)JJ0 1
)JJ1 2
{JJ3 4
existeKK 
=KK 
trueKK !
;KK! "
breakLL 
;LL 
}MM 
}NN 
ifOO 
(OO 
existeOO 
)OO 
{OO 
errPP 
.PP 
SetErrorPP 
(PP 
txtPP  
,PP  !
mensajePP" )
)PP) *
;PP* +
}QQ 
elseQQ 
{QQ 
errRR 
.RR 
SetErrorRR 
(RR 
txtRR  
,RR  !
$strRR" $
)RR$ %
;RR% &
}SS 
returnTT 
existeTT 
;TT 
}UU 	
publicWW 
boolWW 
existeClienteWW !
(WW! "
ErrorProviderWW" /
errWW0 3
,WW3 4
TextBoxWW5 <
txtWW= @
,WW@ A
stringWWB H
mensajeWWI P
)WWP Q
{WWR S
boolXX 
existeXX 
=XX 
falseXX 
;XX  
ClsNclienteYY 
NYY 
=YY 
newYY 
ClsNclienteYY  +
(YY+ ,
)YY, -
;YY- .
foreachZZ 
(ZZ 
ClsEclienteZZ  
itemZZ! %
inZZ& (
NZZ) *
.ZZ* +
listarClientesZZ+ 9
(ZZ9 :
)ZZ: ;
)ZZ; <
{ZZ= >
if[[ 
([[ 
txt[[ 
.[[ 
Text[[ 
==[[ 
item[[  $
.[[$ %
Nombres[[% ,
+[[- .
$str[[/ 2
+[[3 4
item[[5 9
.[[9 :
	Apellidos[[: C
||[[D F
txt[[G J
.[[J K
Text[[K O
==[[P R
item[[S W
.[[W X

DniCliente[[X b
)[[b c
{[[d e
existe\\ 
=\\ 
true\\ !
;\\! "
break]] 
;]] 
}^^ 
}__ 
if`` 
(`` 
existe`` 
)`` 
{`` 
erraa 
.aa 
SetErroraa 
(aa 
txtaa  
,aa  !
$straa" $
)aa$ %
;aa% &
}bb 
elsebb 
{bb 
errcc 
.cc 
SetErrorcc 
(cc 
txtcc  
,cc  !
mensajecc" )
)cc) *
;cc* +
}dd 
returnee 
existeee 
;ee 
}ff 	
publichh 
boolhh 
existeCargohh 
(hh  
ErrorProviderhh  -
errhh. 1
,hh1 2
TextBoxhh3 :
txthh; >
,hh> ?
stringhh@ F
mensajehhG N
)hhN O
{hhP Q
boolii 
existeii 
=ii 
falseii 
;ii  
	ClsNcargojj 
Njj 
=jj 
newjj 
	ClsNcargojj '
(jj' (
)jj( )
;jj) *
foreachkk 
(kk 
	ClsEcargokk 
itemkk #
inkk$ &
Nkk' (
.kk( )
listarCargoskk) 5
(kk5 6
)kk6 7
)kk7 8
{kk9 :
ifll 
(ll 
txtll 
.ll 
Textll 
.ll 
Equalsll #
(ll# $
itemll$ (
.ll( )
Descripcionll) 4
)ll4 5
)ll5 6
{ll7 8
existemm 
=mm 
truemm !
;mm! "
breaknn 
;nn 
}oo 
}pp 
ifqq 
(qq 
existeqq 
)qq 
{qq 
errrr 
.rr 
SetErrorrr 
(rr 
txtrr  
,rr  !
mensajerr" )
)rr) *
;rr* +
}ss 
elsess 
{ss 
errtt 
.tt 
SetErrortt 
(tt 
txttt  
,tt  !
$strtt" $
)tt$ %
;tt% &
}uu 
returnvv 
existevv 
;vv 
}ww 	
publicyy 
boolyy 
existeProductoyy "
(yy" #
ErrorProvideryy# 0
erryy1 4
,yy4 5
TextBoxyy6 =
txtyy> A
,yyA B
stringyyC I
mensajeyyJ Q
)yyQ R
{yyS T
boolzz 
existezz 
=zz 
falsezz 
;zz  
ClsNlote{{ 
N{{ 
={{ 
new{{ 
ClsNlote{{ %
({{% &
){{& '
;{{' (
foreach|| 
(|| 
ClsElote|| 
item|| "
in||# %
N||& '
.||' (
listarLotes||( 3
(||3 4
)||4 5
)||5 6
{||7 8
if}} 
(}} 
txt}} 
.}} 
Text}} 
.}} 
Equals}} #
(}}# $
item}}$ (
.}}( )
Nombre}}) /
)}}/ 0
||}}1 3
txt}}4 7
.}}7 8
Text}}8 <
.}}< =
Equals}}= C
(}}C D
item}}D H
.}}H I
CodLote}}I P
)}}P Q
)}}Q R
{}}S T
existe~~ 
=~~ 
true~~ !
;~~! "
break 
; 
}
ÄÄ 
}
ÅÅ 
if
ÇÇ 
(
ÇÇ 
existe
ÇÇ 
)
ÇÇ 
{
ÇÇ 
err
ÉÉ 
.
ÉÉ 
SetError
ÉÉ 
(
ÉÉ 
txt
ÉÉ  
,
ÉÉ  !
$str
ÉÉ" $
)
ÉÉ$ %
;
ÉÉ% &
}
ÑÑ 
else
ÑÑ 
{
ÑÑ 
err
ÖÖ 
.
ÖÖ 
SetError
ÖÖ 
(
ÖÖ 
txt
ÖÖ  
,
ÖÖ  !
mensaje
ÖÖ" )
)
ÖÖ) *
;
ÖÖ* +
}
ÜÜ 
return
áá 
existe
áá 
;
áá 
}
àà 	
public
ää 
bool
ää &
existeProductoEnDataGrid
ää ,
(
ää, -
ErrorProvider
ää- :
err
ää; >
,
ää> ?
DataGridView
ää@ L
dgv
ääM P
,
ääP Q
TextBox
ääR Y
txt
ääZ ]
,
ää] ^
string
ää_ e
mensaje
ääf m
,
ääm n
Label
ääo t
lbl
ääu x
)
ääx y
{
ääz {
bool
ãã 
existe
ãã 
=
ãã 
false
ãã 
;
ãã  
foreach
åå 
(
åå 
DataGridViewRow
åå $
fila
åå% )
in
åå* ,
dgv
åå- 0
.
åå0 1
Rows
åå1 5
)
åå5 6
{
åå7 8
if
çç 
(
çç 
txt
çç 
.
çç 
Text
çç 
.
çç 
Equals
çç #
(
çç# $
fila
çç$ (
.
çç( )
Cells
çç) .
[
çç. /
$num
çç/ 0
]
çç0 1
.
çç1 2
Value
çç2 7
.
çç7 8
ToString
çç8 @
(
çç@ A
)
ççA B
)
ççB C
||
ççD F
lbl
ççG J
.
ççJ K
Text
ççK O
.
ççO P
Equals
ççP V
(
ççV W
fila
ççW [
.
çç[ \
Cells
çç\ a
[
çça b
$num
ççb c
]
ççc d
.
ççd e
Value
ççe j
.
ççj k
ToString
ççk s
(
ççs t
)
ççt u
)
ççu v
)
ççv w
{
ççx y
existe
éé 
=
éé 
true
éé !
;
éé! "
break
èè 
;
èè 
}
êê 
}
ëë 
if
íí 
(
íí 
existe
íí 
)
íí 
{
íí 
err
ìì 
.
ìì 
SetError
ìì 
(
ìì 
txt
ìì  
,
ìì  !
mensaje
ìì" )
)
ìì) *
;
ìì* +
}
îî 
else
îî 
{
îî 
err
ïï 
.
ïï 
SetError
ïï 
(
ïï 
txt
ïï  
,
ïï  !
$str
ïï" $
)
ïï$ %
;
ïï% &
}
ññ 
return
óó 
existe
óó 
;
óó 
}
òò 	
public
öö 
bool
öö 
boton
öö 
(
öö 
bool
öö 
enabled
öö &
)
öö& '
{
öö( )
if
õõ 
(
õõ 
!
õõ 
enabled
õõ 
)
õõ 
{
õõ 

MessageBox
úú 
.
úú 
Show
úú 
(
úú  
$str
úú  Q
,
úúQ R
$str
úúS e
,
úúe f
MessageBoxButtons
úúg x
.
úúx y
OK
úúy {
,
úú{ |
MessageBoxIconúú} ã
.úúã å
Informationúúå ó
)úúó ò
;úúò ô
}
ùù 
return
ûû 
enabled
ûû 
;
ûû 
}
üü 	
public
°° 
bool
°° !
contrase√±aCorrecta
°° &
(
°°& '
ErrorProvider
°°' 4
err
°°5 8
,
°°8 9
Label
°°: ?
lbl
°°@ C
,
°°C D
TextBox
°°E L
txt
°°M P
,
°°P Q
string
°°R X
mensaje
°°Y `
)
°°` a
{
°°b c
bool
¢¢ 
correcta
¢¢ 
=
¢¢ 
false
¢¢ !
;
¢¢! "
ClsNempleado
££ 
N
££ 
=
££ 
new
££  
ClsNempleado
££! -
(
££- .
)
££. /
;
££/ 0
foreach
§§ 
(
§§ 
ClsEempleado
§§ !
item
§§" &
in
§§' )
N
§§* +
.
§§+ ,
listarEmpleados
§§, ;
(
§§; <
)
§§< =
)
§§= >
{
§§? @
if
•• 
(
•• 
txt
•• 
.
•• 
Text
•• 
.
•• 
Equals
•• #
(
••# $
item
••$ (
.
••( )
Contrase√±a
••) 3
)
••3 4
&&
••5 7
lbl
••8 ;
.
••; <
Text
••< @
.
••@ A
Equals
••A G
(
••G H
item
••H L
.
••L M
DniEmpleado
••M X
)
••X Y
)
••Y Z
{
••[ \
correcta
¶¶ 
=
¶¶ 
true
¶¶ #
;
¶¶# $
break
ßß 
;
ßß 
}
®® 
}
©© 
if
™™ 
(
™™ 
correcta
™™ 
)
™™ 
{
™™ 
err
´´ 
.
´´ 
SetError
´´ 
(
´´ 
txt
´´  
,
´´  !
$str
´´" $
)
´´$ %
;
´´% &
}
¨¨ 
else
¨¨ 
{
¨¨ 
err
≠≠ 
.
≠≠ 
SetError
≠≠ 
(
≠≠ 
txt
≠≠  
,
≠≠  !
mensaje
≠≠" )
)
≠≠) *
;
≠≠* +
}
ÆÆ 
return
ØØ 
correcta
ØØ 
;
ØØ 
}
∞∞ 	
public
≤≤ 
bool
≤≤ &
compararContrase√±aNueva
≤≤ +
(
≤≤+ ,
ErrorProvider
≤≤, 9
err
≤≤: =
,
≤≤= >
TextBox
≤≤? F
txtNueva
≤≤G O
,
≤≤O P
TextBox
≤≤Q X
txtRepe
≤≤Y `
,
≤≤` a
string
≤≤b h
mensaje
≤≤i p
)
≤≤p q
{
≤≤r s
bool
≥≥ 
igual
≥≥ 
;
≥≥ 
if
¥¥ 
(
¥¥ 
txtNueva
¥¥ 
.
¥¥ 
Text
¥¥ 
.
¥¥ 
Equals
¥¥ $
(
¥¥$ %
txtRepe
¥¥% ,
.
¥¥, -
Text
¥¥- 1
)
¥¥1 2
)
¥¥2 3
{
¥¥4 5
err
µµ 
.
µµ 
SetError
µµ 
(
µµ 
txtNueva
µµ %
,
µµ% &
$str
µµ' )
)
µµ) *
;
µµ* +
err
∂∂ 
.
∂∂ 
SetError
∂∂ 
(
∂∂ 
txtRepe
∂∂ $
,
∂∂$ %
$str
∂∂& (
)
∂∂( )
;
∂∂) *
igual
∑∑ 
=
∑∑ 
true
∑∑ 
;
∑∑ 
}
∏∏ 
else
∏∏ 
{
∏∏ 
err
ππ 
.
ππ 
SetError
ππ 
(
ππ 
txtNueva
ππ %
,
ππ% &
mensaje
ππ' .
)
ππ. /
;
ππ/ 0
err
∫∫ 
.
∫∫ 
SetError
∫∫ 
(
∫∫ 
txtRepe
∫∫ $
,
∫∫$ %
mensaje
∫∫& -
)
∫∫- .
;
∫∫. /
igual
ªª 
=
ªª 
false
ªª 
;
ªª 
}
ºº 
return
ΩΩ 
igual
ΩΩ 
;
ΩΩ 
}
ææ 	
public
¿¿ 
void
¿¿ 
numeroConCaracter
¿¿ %
(
¿¿% &
TextBox
¿¿& -
txt
¿¿. 1
,
¿¿1 2
KeyPressEventArgs
¿¿3 D
e
¿¿E F
,
¿¿F G
char
¿¿H L
st
¿¿M O
)
¿¿O P
{
¿¿Q R
if
¡¡ 
(
¡¡ 
char
¡¡ 
.
¡¡ 
IsDigit
¡¡ 
(
¡¡ 
e
¡¡ 
.
¡¡ 
KeyChar
¡¡ &
)
¡¡& '
)
¡¡' (
{
¡¡) *
e
¬¬ 
.
¬¬ 
Handled
¬¬ 
=
¬¬ 
false
¬¬ !
;
¬¬! "
}
√√ 
else
√√ 
if
√√ 
(
√√ 
char
√√ 
.
√√ 
	IsControl
√√ %
(
√√% &
e
√√& '
.
√√' (
KeyChar
√√( /
)
√√/ 0
)
√√0 1
{
√√2 3
e
ƒƒ 
.
ƒƒ 
Handled
ƒƒ 
=
ƒƒ 
false
ƒƒ !
;
ƒƒ! "
}
≈≈ 
else
≈≈ 
if
≈≈ 
(
≈≈ 
(
≈≈ 
e
≈≈ 
.
≈≈ 
KeyChar
≈≈ !
==
≈≈" $
st
≈≈% '
)
≈≈' (
&&
≈≈) +
(
≈≈, -
!
≈≈- .
txt
≈≈. 1
.
≈≈1 2
Text
≈≈2 6
.
≈≈6 7
Contains
≈≈7 ?
(
≈≈? @
st
≈≈@ B
.
≈≈B C
ToString
≈≈C K
(
≈≈K L
)
≈≈L M
)
≈≈M N
)
≈≈N O
)
≈≈O P
{
≈≈Q R
e
∆∆ 
.
∆∆ 
Handled
∆∆ 
=
∆∆ 
false
∆∆ !
;
∆∆! "
}
«« 
else
«« 
{
«« 
e
»» 
.
»» 
Handled
»» 
=
»» 
true
»»  
;
»»  !
}
…… 
}
   	
public
ÃÃ 
void
ÃÃ 

soloNumero
ÃÃ 
(
ÃÃ 
KeyPressEventArgs
ÃÃ 0
e
ÃÃ1 2
)
ÃÃ2 3
{
ÃÃ4 5
if
ÕÕ 
(
ÕÕ 
char
ÕÕ 
.
ÕÕ 
IsDigit
ÕÕ 
(
ÕÕ 
e
ÕÕ 
.
ÕÕ 
KeyChar
ÕÕ &
)
ÕÕ& '
)
ÕÕ' (
{
ÕÕ) *
e
ŒŒ 
.
ŒŒ 
Handled
ŒŒ 
=
ŒŒ 
false
ŒŒ !
;
ŒŒ! "
}
œœ 
else
œœ 
if
œœ 
(
œœ 
char
œœ 
.
œœ 
	IsControl
œœ %
(
œœ% &
e
œœ& '
.
œœ' (
KeyChar
œœ( /
)
œœ/ 0
)
œœ0 1
{
œœ2 3
e
–– 
.
–– 
Handled
–– 
=
–– 
false
–– !
;
––! "
}
—— 
else
—— 
{
—— 
e
““ 
.
““ 
Handled
““ 
=
““ 
true
““  
;
““  !
}
”” 
}
‘‘ 	
public
÷÷ 
void
÷÷ 
textoConEspacio
÷÷ #
(
÷÷# $
KeyPressEventArgs
÷÷$ 5
e
÷÷6 7
)
÷÷7 8
{
÷÷9 :
if
◊◊ 
(
◊◊ 
char
◊◊ 
.
◊◊ 
IsLetter
◊◊ 
(
◊◊ 
e
◊◊ 
.
◊◊  
KeyChar
◊◊  '
)
◊◊' (
)
◊◊( )
{
◊◊* +
e
ÿÿ 
.
ÿÿ 
Handled
ÿÿ 
=
ÿÿ 
false
ÿÿ !
;
ÿÿ! "
}
ŸŸ 
else
ŸŸ 
if
ŸŸ 
(
ŸŸ 
char
ŸŸ 
.
ŸŸ 
	IsControl
ŸŸ %
(
ŸŸ% &
e
ŸŸ& '
.
ŸŸ' (
KeyChar
ŸŸ( /
)
ŸŸ/ 0
)
ŸŸ0 1
{
ŸŸ2 3
e
⁄⁄ 
.
⁄⁄ 
Handled
⁄⁄ 
=
⁄⁄ 
false
⁄⁄ !
;
⁄⁄! "
}
€€ 
else
€€ 
if
€€ 
(
€€ 
char
€€ 
.
€€ 
IsSeparator
€€ '
(
€€' (
e
€€( )
.
€€) *
KeyChar
€€* 1
)
€€1 2
)
€€2 3
{
€€4 5
e
‹‹ 
.
‹‹ 
Handled
‹‹ 
=
‹‹ 
false
‹‹ !
;
‹‹! "
}
›› 
else
›› 
{
›› 
e
ﬁﬁ 
.
ﬁﬁ 
Handled
ﬁﬁ 
=
ﬁﬁ 
true
ﬁﬁ  
;
ﬁﬁ  !
}
ﬂﬂ 
}
‡‡ 	
public
‚‚ 
void
‚‚ 
	soloTexto
‚‚ 
(
‚‚ 
KeyPressEventArgs
‚‚ /
e
‚‚0 1
)
‚‚1 2
{
‚‚3 4
if
„„ 
(
„„ 
char
„„ 
.
„„ 
IsLetter
„„ 
(
„„ 
e
„„ 
.
„„  
KeyChar
„„  '
)
„„' (
)
„„( )
{
„„* +
e
‰‰ 
.
‰‰ 
Handled
‰‰ 
=
‰‰ 
false
‰‰ !
;
‰‰! "
}
ÂÂ 
else
ÂÂ 
if
ÂÂ 
(
ÂÂ 
char
ÂÂ 
.
ÂÂ 
	IsControl
ÂÂ %
(
ÂÂ% &
e
ÂÂ& '
.
ÂÂ' (
KeyChar
ÂÂ( /
)
ÂÂ/ 0
)
ÂÂ0 1
{
ÂÂ2 3
e
ÊÊ 
.
ÊÊ 
Handled
ÊÊ 
=
ÊÊ 
false
ÊÊ !
;
ÊÊ! "
}
ÁÁ 
else
ÁÁ 
{
ÁÁ 
e
ËË 
.
ËË 
Handled
ËË 
=
ËË 
true
ËË  
;
ËË  !
}
ÈÈ 
}
ÍÍ 	
}
ÎÎ 
}ÏÏ ç
5F:\UPT\VII CICLO\Z JEANET\Sistema\Negocios\Program.cs
	namespace 	
Negocios
 
{ 
static 

class 
Program 
{ 
[		 	
	STAThread			 
]		 
static

 
void

 
Main

 
(

 
)

 
{

 
Application 
. 
EnableVisualStyles *
(* +
)+ ,
;, -
Application 
. -
!SetCompatibleTextRenderingDefault 9
(9 :
false: ?
)? @
;@ A
} 	
} 
} 
EF:\UPT\VII CICLO\Z JEANET\Sistema\Negocios\Properties\AssemblyInfo.cs
[ 
assembly 	
:	 

AssemblyTitle 
( 
$str #
)# $
]$ %
[ 
assembly 	
:	 

AssemblyDescription 
( 
$str !
)! "
]" #
[		 
assembly		 	
:			 
!
AssemblyConfiguration		  
(		  !
$str		! #
)		# $
]		$ %
[

 
assembly

 	
:

	 

AssemblyCompany

 
(

 
$str

 
)

 
]

 
[ 
assembly 	
:	 

AssemblyProduct 
( 
$str %
)% &
]& '
[ 
assembly 	
:	 

AssemblyCopyright 
( 
$str 0
)0 1
]1 2
[ 
assembly 	
:	 

AssemblyTrademark 
( 
$str 
)  
]  !
[ 
assembly 	
:	 

AssemblyCulture 
( 
$str 
) 
] 
[ 
assembly 	
:	 


ComVisible 
( 
false 
) 
] 
[ 
assembly 	
:	 

Guid 
( 
$str 6
)6 7
]7 8
["" 
assembly"" 	
:""	 

AssemblyVersion"" 
("" 
$str"" $
)""$ %
]""% &
[## 
assembly## 	
:##	 

AssemblyFileVersion## 
(## 
$str## (
)##( )
]##) *